(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{154:function(e,t,r){"use strict";r.r(t);var i=r(305),o=r.n(i),n=(r(41),r(82),r(56),r(80),r(245),r(306)),s=r.n(n),a=r(6),p=r.n(a),d=r(0),c=r.n(d),m=r(178),u=r.n(m),l=r(216),g=r(261),y=r(166),h=r.n(y),f=(r(499),r(500),r(54),r(38)),v=r(501),b=r.n(v),I=(r(502),r(503),r(309)),q=function(e){function t(){return e.apply(this,arguments)||this}return p()(t,e),t.prototype.render=function(){var e=Object(I.a)(this.props.postEdges,this.props.activeLink),t=e.versions,r=e.menus,i=e.activeVersion;return c.a.createElement("div",{className:"posts-menu"},t.length>1&&c.a.createElement(b.a,{options:t,onChange:function(e){Object(f.navigate)(e.value)},value:i,placeholder:"Select an option"}),c.a.createElement("div",{className:"menu-body"},r.map(function(e){return c.a.createElement("div",{key:e.title,className:["item-container",e.isActive?"active open":""].join(" ")},c.a.createElement(f.Link,{to:e.path,key:e.title},e.title),e.subMenus&&c.a.createElement("div",{className:"sub-menu active"},e.subMenus.map(function(e){return c.a.createElement(f.Link,{activeClassName:"active",to:e.path,key:e.title},e.title)})))})))},t}(d.Component),F=(r(504),r(265)),A=r.n(F),N=function(e){function t(){return e.apply(this,arguments)||this}return p()(t,e),t.prototype.render=function(){return c.a.createElement("section",{className:"edgeworx"},c.a.createElement("section",{className:"container"},c.a.createElement("section",{className:"row align-items-center"},c.a.createElement("section",{className:"col-12 col-md-8"},c.a.createElement("h5",null,"Looking for an enterprise solution?"),c.a.createElement("h3",null,"Run software at the edge with Edgeworx."),c.a.createElement(f.Link,{className:"button",to:"/enterprise"},"Learn More")),c.a.createElement("section",{className:"col-12 col-md-4"},c.a.createElement("img",{srcSet:A.a,alt:""})))))},t}(d.Component),S=r(505),C=r.n(S);r.d(t,"default",function(){return R}),r.d(t,"pageQuery",function(){return E});var R=function(e){function t(){for(var t,r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))||this).postRef=c.a.createRef(),t}p()(t,e);var i=t.prototype;return i.componentDidMount=function(){var e=s()(o.a.mark(function e(){var t,i,n;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(t=this.postRef.current.querySelector("swagger-ui"))){e.next=8;break}return e.next=4,Promise.all([Promise.all([r.e(10),r.e(13)]).then(r.t.bind(null,853,7)),r.e(12).then(r.t.bind(null,854,7))]);case 4:i=e.sent,n=i[0].default,i[1],n({domNode:t,spec:C.a});case 8:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}(),i.render=function(){var e=this.props,t=e.pageContext,r=e.data,i=t.slug,o=t.type,n=t.version,s="/"+o+i;n&&(s="/"+o+"/"+n+i);var a=r.markdownRemark,p=r[o],d=a.frontmatter;return c.a.createElement(l.a,{location:o},c.a.createElement(u.a,null,c.a.createElement("title",null,d.title+" | "+d.category+" | "+h.a.siteTitle)),c.a.createElement(g.a,{postPath:i,postNode:a,postSEO:!0}),c.a.createElement("div",{className:"container-fluid"},c.a.createElement("div",{className:"row post"},c.a.createElement("div",{className:"menu-list col-12 col-lg-3"},c.a.createElement("div",{className:"row"},c.a.createElement(q,{postEdges:p,activeLink:s}))),c.a.createElement("div",{className:"post-container col-12 col-lg-9 bg-grey"},c.a.createElement("div",{className:"row"},c.a.createElement("div",{className:"offset-1 offset-lg-1 offset-xl-1"}),c.a.createElement("div",{className:"col-12 col-lg-10"},c.a.createElement("div",{ref:this.postRef,dangerouslySetInnerHTML:{__html:a.html}})))))),c.a.createElement(N,null))},t}(c.a.Component),E="902593941"},261:function(e,t,r){"use strict";var i=r(6),o=r.n(i),n=r(0),s=r.n(n),a=r(178),p=r.n(a),d=r(262),c=r.n(d),m=r(166),u=r.n(m),l=r(263),g=r.n(l),y=function(e){function t(){return e.apply(this,arguments)||this}return o()(t,e),t.prototype.render=function(){var e,t,r,i,o=this.props,n=o.postNode,a=o.postPath,d=o.postSEO,m="undefined"!=typeof window?window.location.origin:"";if(d){var l=n.frontmatter;e=l.title,t=l.description?l.description:n.excerpt,r=l.cover||g.a,i=c()(m,a)}else e=u.a.siteTitle,t=u.a.siteDescription,r=g.a;r=c()(m,r);var y=m,h=[{"@context":"http://schema.org","@type":"WebSite",url:y,name:e,alternateName:u.a.siteTitleAlt?u.a.siteTitleAlt:""}];return d&&h.push({"@context":"http://schema.org","@type":"BreadcrumbList",itemListElement:[{"@type":"ListItem",position:1,item:{"@id":i,name:e,image:r}}]},{"@context":"http://schema.org","@type":"BlogPosting",url:y,name:e,alternateName:u.a.siteTitleAlt?u.a.siteTitleAlt:"",headline:e,image:{"@type":"ImageObject",url:r},description:t}),s.a.createElement(p.a,null,s.a.createElement("meta",{name:"description",content:t}),s.a.createElement("meta",{name:"image",content:r}),s.a.createElement("script",{type:"application/ld+json"},JSON.stringify(h)),s.a.createElement("meta",{property:"og:url",content:d?i:y}),d?s.a.createElement("meta",{property:"og:type",content:"article"}):null,s.a.createElement("meta",{property:"og:title",content:e}),s.a.createElement("meta",{property:"og:description",content:t}),s.a.createElement("meta",{property:"og:image",content:r}),s.a.createElement("meta",{property:"fb:app_id",content:u.a.siteFBAppID?u.a.siteFBAppID:""}),s.a.createElement("meta",{name:"twitter:card",content:"summary_large_image"}),s.a.createElement("meta",{name:"twitter:title",content:e}),s.a.createElement("meta",{name:"twitter:description",content:t}),s.a.createElement("meta",{name:"twitter:image",content:r}))},t}(n.Component);t.a=y},262:function(e,t,r){var i,o,n;n=function(){return function(){return function(e){var t=[];if(e[0].match(/^[^\/:]+:\/*$/)&&e.length>1){var r=e.shift();e[0]=r+e[0]}e[0].match(/^file:\/\/\//)?e[0]=e[0].replace(/^([^\/:]+):\/*/,"$1:///"):e[0]=e[0].replace(/^([^\/:]+):\/*/,"$1://");for(var i=0;i<e.length;i++){var o=e[i];if("string"!=typeof o)throw new TypeError("Url must be a string. Received "+o);""!==o&&(i>0&&(o=o.replace(/^[\/]+/,"")),o=i<e.length-1?o.replace(/[\/]+$/,""):o.replace(/[\/]+$/,"/"),t.push(o))}var n=t.join("/"),s=(n=n.replace(/\/(\?|&|#[^!])/g,"$1")).split("?");return n=s.shift()+(s.length>0?"?":"")+s.join("&")}("object"==typeof arguments[0]?arguments[0]:[].slice.call(arguments))}},e.exports?e.exports=n():void 0===(o="function"==typeof(i=n)?i.call(t,r,t,e):i)||(e.exports=o)},263:function(e,t,r){e.exports=r.p+"static/iofog-ed766632cbd821903a9e8a20172a92d5.png"},264:function(e,t,r){var i;!function(){"use strict";var r={}.hasOwnProperty;function o(){for(var e=[],t=0;t<arguments.length;t++){var i=arguments[t];if(i){var n=typeof i;if("string"===n||"number"===n)e.push(i);else if(Array.isArray(i)&&i.length){var s=o.apply(null,i);s&&e.push(s)}else if("object"===n)for(var a in i)r.call(i,a)&&i[a]&&e.push(a)}}return e.join(" ")}e.exports?(o.default=o,e.exports=o):void 0===(i=function(){return o}.apply(t,[]))||(e.exports=i)}()},265:function(e,t,r){e.exports=r.p+"static/edgeworx-illustration-01-2dbe797c5725f0ee4196dbcd68a294a9.svg"},499:function(e,t,r){},500:function(e,t,r){},501:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=function(){function e(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,r,i){return r&&e(t.prototype,r),i&&e(t,i),t}}(),o=r(0),n=p(o),s=p(r(39)),a=p(r(264));function p(e){return e&&e.__esModule?e:{default:e}}function d(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var c="Select...",m=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var r=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return r.state={selected:r.parseValue(e.value,e.options)||{label:void 0===e.placeholder?c:e.placeholder,value:""},isOpen:!1},r.mounted=!0,r.handleDocumentClick=r.handleDocumentClick.bind(r),r.fireChangeEvent=r.fireChangeEvent.bind(r),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.Component),i(t,[{key:"componentWillReceiveProps",value:function(e){if(e.value){var t=this.parseValue(e.value,e.options);t!==this.state.selected&&this.setState({selected:t})}else this.setState({selected:{label:void 0===e.placeholder?c:e.placeholder,value:""}})}},{key:"componentDidMount",value:function(){document.addEventListener("click",this.handleDocumentClick,!1),document.addEventListener("touchend",this.handleDocumentClick,!1)}},{key:"componentWillUnmount",value:function(){this.mounted=!1,document.removeEventListener("click",this.handleDocumentClick,!1),document.removeEventListener("touchend",this.handleDocumentClick,!1)}},{key:"handleMouseDown",value:function(e){this.props.onFocus&&"function"==typeof this.props.onFocus&&this.props.onFocus(this.state.isOpen),"mousedown"===e.type&&0!==e.button||(e.stopPropagation(),e.preventDefault(),this.props.disabled||this.setState({isOpen:!this.state.isOpen}))}},{key:"parseValue",value:function(e,t){var r=void 0;if("string"==typeof e)for(var i=0,o=t.length;i<o;i++)if("group"===t[i].type){var n=t[i].items.filter(function(t){return t.value===e});n.length&&(r=n[0])}else void 0!==t[i].value&&t[i].value===e&&(r=t[i]);return r||e}},{key:"setValue",value:function(e,t){var r={selected:{value:e,label:t},isOpen:!1};this.fireChangeEvent(r),this.setState(r)}},{key:"fireChangeEvent",value:function(e){e.selected!==this.state.selected&&this.props.onChange&&this.props.onChange(e.selected)}},{key:"renderOption",value:function(e){var t,r=e.value;void 0===r&&(r=e.label||e);var i=e.label||e.value||e,o=(d(t={},this.props.baseClassName+"-option",!0),d(t,e.className,!!e.className),d(t,"is-selected",r===this.state.selected.value||r===this.state.selected),t),s=(0,a.default)(o);return n.default.createElement("div",{key:r,className:s,onMouseDown:this.setValue.bind(this,r,i),onClick:this.setValue.bind(this,r,i)},i)}},{key:"buildMenu",value:function(){var e=this,t=this.props,r=t.options,i=t.baseClassName,o=r.map(function(t){if("group"===t.type){var r=n.default.createElement("div",{className:i+"-title"},t.name),o=t.items.map(function(t){return e.renderOption(t)});return n.default.createElement("div",{className:i+"-group",key:t.name},r,o)}return e.renderOption(t)});return o.length?o:n.default.createElement("div",{className:i+"-noresults"},"No options found")}},{key:"handleDocumentClick",value:function(e){this.mounted&&(s.default.findDOMNode(this).contains(e.target)||this.state.isOpen&&this.setState({isOpen:!1}))}},{key:"isValueSelected",value:function(){return"string"==typeof this.state.selected||""!==this.state.selected.value}},{key:"render",value:function(){var e,t,r,i,o,s=this.props,p=s.baseClassName,c=s.controlClassName,m=s.placeholderClassName,u=s.menuClassName,l=s.arrowClassName,g=s.arrowClosed,y=s.arrowOpen,h=s.className,f=this.props.disabled?"Dropdown-disabled":"",v="string"==typeof this.state.selected?this.state.selected:this.state.selected.label,b=(0,a.default)((d(e={},p+"-root",!0),d(e,h,!!h),d(e,"is-open",this.state.isOpen),e)),I=(0,a.default)((d(t={},p+"-control",!0),d(t,c,!!c),d(t,f,!!f),t)),q=(0,a.default)((d(r={},p+"-placeholder",!0),d(r,m,!!m),d(r,"is-selected",this.isValueSelected()),r)),F=(0,a.default)((d(i={},p+"-menu",!0),d(i,u,!!u),i)),A=(0,a.default)((d(o={},p+"-arrow",!0),d(o,l,!!l),o)),N=n.default.createElement("div",{className:q},v),S=this.state.isOpen?n.default.createElement("div",{className:F},this.buildMenu()):null;return n.default.createElement("div",{className:b},n.default.createElement("div",{className:I,onMouseDown:this.handleMouseDown.bind(this),onTouchEnd:this.handleMouseDown.bind(this)},N,n.default.createElement("div",{className:p+"-arrow-wrapper"},y&&g?this.state.isOpen?y:g:n.default.createElement("span",{className:A}))),S)}}]),t}();m.defaultProps={baseClassName:"Dropdown"},t.default=m},502:function(e,t,r){},503:function(e,t,r){},504:function(e,t,r){},505:function(e,t){e.exports={swagger:"2.0",info:{version:"3.0.0",title:"FogController"},consumes:["application/json"],produces:["application/json"],paths:{"/status":{get:{tags:["Controller"],description:"Returns service health status",operationId:"getServiceStatus",responses:{200:{description:"Service status",schema:{$ref:"#/definitions/ServiceStatusResponse"}},500:{description:"Internal Server Error"}}}},"/email-activation":{get:{tags:["Controller"],description:"Returns email activation status",operationId:"getEmailActivationStatus",responses:{200:{description:"Email activation status",schema:{$ref:"#/definitions/EmailActivationStatusResponse"}},500:{description:"Internal Server Error"}}}},"/fog-types":{get:{tags:["Controller"],description:"Gets ioFog types list",operationId:"getIOFogTypes",responses:{200:{description:"Success",schema:{$ref:"#/definitions/IOFogTypesResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},500:{description:"Internal Server Error"}}}},"/iofog-list":{post:{tags:["ioFog"],description:"Returns list of ioFog nodes",operationId:"getIOFogNodes",parameters:[{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"},{in:"body",name:"Filters",required:!1,schema:{$ref:"#/definitions/IOFogNodesListFilters"}}],responses:{200:{description:"List of ioFog nodes",schema:{$ref:"#/definitions/IOFogNodesListResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/iofog":{post:{tags:["ioFog"],description:"Creates a new ioFog node",operationId:"createIOFogNode",parameters:[{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"},{in:"body",name:"IOFogNodeInfo",required:!0,schema:{$ref:"#/definitions/UpdateIOFogNodeRequestBody"}}],responses:{201:{description:"Created",schema:{$ref:"#/definitions/NewIOFogNodeResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/iofog/{uuid}":{patch:{tags:["ioFog"],description:"Updates existing ioFog node",operationId:"updateIOFogNode",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"},{in:"body",name:"ioFogNodeInfo",required:!0,schema:{$ref:"#/definitions/UpdateIOFogNodeRequestBody"}}],responses:{204:{description:"Updated",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}},delete:{tags:["ioFog"],description:"Deletes an ioFog node",operationId:"deleteIOFogNode",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{202:{description:"Accepted",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}},get:{tags:["ioFog"],description:"Gets ioFog node info",operationId:"getIOFogNode",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/IOFogNodeInfoResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/iofog/{uuid}/provisioning-key":{get:{tags:["ioFog"],description:"Generates provisioning key for an ioFog node",operationId:"generateProvisioningKey",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{201:{description:"Success",schema:{$ref:"#/definitions/ProvisioningKeyResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/iofog/{uuid}/version/{versionCommand}":{post:{tags:["ioFog"],description:"Set change version command",operationId:"setVersionCommand",parameters:[{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"},{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"path",name:"versionCommand",description:"change version command",required:!0,type:"string",enum:["upgrade","rollback"]}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/iofog/{uuid}/reboot":{post:{tags:["ioFog"],description:"remote reboot fog agent",operationId:"setRebootCommand",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/iofog/{uuid}/hal/hw":{get:{tags:["ioFog"],description:"Retrieves HAL hardware info",operationId:"getFogHalHardwareInfo",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/HalInfo"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/iofog/{uuid}/hal/usb":{get:{tags:["ioFog"],description:"Retrieves HAL USB info",operationId:"getFogHalUsbInfo",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/HalInfo"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/provision":{post:{tags:["Agent"],description:"Provision agent with an ioFog node",operationId:"agentProvision",parameters:[{in:"body",required:!0,name:"AgentProvisioningRequest",schema:{$ref:"#/definitions/AgentProvisioningRequest"}}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/AgentProvisioningResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Expired Provisioning Key"},404:{description:"Invalid Provisioning Key"},500:{description:"Internal Server Error"}}}},"/agent/config":{get:{tags:["Agent"],description:"Get an ioFog node configuration",operationId:"getIOFogNodeConfig",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/IOFogNodeConfig"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}},patch:{tags:["Agent"],description:"Updates an ioFog node configuration",operationId:"updateIOFogNodeConfig",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"},{in:"body",name:"UpdateIOFogNodeConfigRequestBody",required:!0,schema:{$ref:"#/definitions/IOFogNodeConfigRequest"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/config/changes":{get:{tags:["Agent"],description:"Gets ioFog node changes",operationId:"getIOFogNodeChanges",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/IOFogNodeConfigChanges"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/status":{put:{tags:["Agent"],description:"Posts agent status to ioFog node",operationId:"postAgentStatus",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"},{in:"body",name:"AgentStatus",required:!0,schema:{$ref:"#/definitions/AgentStatus"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/microservices":{get:{tags:["Agent"],description:"Gets microservices running on an ioFog node",operationId:"getAgentMicroservicesList",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/AgentMicroservicesListResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/microservices/{microserviceId}":{get:{tags:["Agent"],description:"Gets microservices running on an ioFog node",operationId:"getAgentMicroserviceInfo",parameters:[{in:"path",required:!0,name:"microserviceId",description:"Microservice id",type:"string"},{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/AgentMicroservicesInfoResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/registries":{get:{tags:["Agent"],description:"Gets list of Docker registries",operationId:"getRegistriesList",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/RegistriesListResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/proxy":{get:{tags:["Agent"],description:"Get an ioFog node proxy configuration",operationId:"getIOFogNodeProxyConfig",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/IOFogNodeProxyConfigResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/strace":{get:{tags:["Agent"],description:"Get an ioFog node strace info",operationId:"getIOFogNodeStraceInfo",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/IOFogNodeStraceResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}},put:{tags:["Agent"],description:"Posts agent strace to ioFog node",operationId:"postIOFogNodeStraceBuffer",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"},{in:"body",name:"AgentStraceBuffers",required:!0,schema:{$ref:"#/definitions/IOFogNodeStraceBuffer"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/agent/version":{get:{tags:["Agent"],description:"Get change version command",operationId:"getChangeVersion",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/VersionCommandResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Version Command Not Found"},500:{description:"Internal Server Error"}}}},"/agent/hal/hw":{put:{tags:["Agent"],description:"Updates HAL hardware info",operationId:"putHalHardwareInfo",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"},{in:"body",name:"HalInfo",required:!0,schema:{$ref:"#/definitions/HalInfo"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/agent/hal/usb":{put:{tags:["Agent"],description:"Updates HAL USB info",operationId:"putHalUsbInfo",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"},{in:"body",name:"HalInfo",required:!0,schema:{$ref:"#/definitions/HalInfo"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/agent/delete-node":{delete:{tags:["Agent"],description:"Deletes an ioFog node",operationId:"deleteAgentNode",parameters:[{in:"header",name:"Authorization",description:"Agent token",required:!0,type:"string"}],responses:{204:{description:"No Content",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/agent/image-snapshot":{get:{tags:["Agent"],description:"Get image snapshot info",operationId:"getImageSnapshot",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/ImageSnapshotResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Image Snapshot Not Found"},500:{description:"Internal Server Error"}}},put:{tags:["Agent"],description:"Put image snapshot info on controller",operationId:"putImageSnapshot",parameters:[{in:"header",name:"Authorization",description:"Agent Token",required:!0,type:"string"},{in:"body",name:"ImageSnapshotRequest",required:!0,schema:{$ref:"#/definitions/ImageSnapshotRequest"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/catalog/microservices":{get:{tags:["Catalog"],description:"Gets microservices catalog",operationId:"getMicroservicesCatalog",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/MicroservicesCatalogResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}},post:{tags:["Catalog"],description:"Creates a new microservice catalog item",operationId:"createMicroserviceCatalogItem",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"body",name:"CreateCatalogItem",description:"Microservice Catalog Item Info",required:!0,schema:{$ref:"#/definitions/CreateUpdateCatalogItemRequestBody"}}],responses:{201:{description:"Created",schema:{type:"object",properties:{id:{type:"string"}}},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},409:{description:"Duplicate Name"},500:{description:"Internal Server Error"}}}},"/catalog/microservices/{id}":{get:{tags:["Catalog"],description:"Gets microservice catalog item info",operationId:"getMicroserviceCatalogItem",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Catalog Item Id",required:!0,type:"string"}],responses:{200:{description:"Catalog Item Info",schema:{$ref:"#/definitions/CatalogItemInfoResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Catalog Item Id"},500:{description:"Internal Server Error"}}},patch:{tags:["Catalog"],description:"Updates a microservice catalog item",operationId:"updateMicroserviceCatalogItem",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Catalog Item Id",required:!0,type:"string"},{in:"body",name:"UpdateCatalogItem",description:"Microservice Catalog Item Info",required:!0,schema:{$ref:"#/definitions/CreateUpdateCatalogItemRequestBody"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Catalog Item Id"},409:{description:"Duplicate Name"},500:{description:"Internal Server Error"}}},delete:{tags:["Catalog"],description:"Deletes a microservice catalog item",operationId:"deleteMicroserviceCatalogItem",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Catalog Item Id",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Catalog Item Id"},500:{description:"Internal Server Error"}}}},"/flow":{get:{tags:["Flow"],description:"Gets list of flows",operationId:"getFlowsList",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/GetFlowsResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}},post:{tags:["Flow"],description:"Creates a new flow",operationId:"createFlow",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"body",name:"NetFlowInfo",description:"New Flow Info",required:!0,schema:{$ref:"#/definitions/NewFlowRequest"}}],responses:{201:{description:"Created",schema:{type:"object",properties:{id:{type:"string"}}},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/flow/{id}":{get:{tags:["Flow"],description:"Gets flow info",operationId:"getFlowInfo",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Flow Id",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/FlowInfoResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Flow Id"},500:{description:"Internal Server Error"}}},patch:{tags:["Flow"],description:"Updates a flow",operationId:"updateFlow",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Flow Id",required:!0,type:"string"},{in:"body",name:"NetFlowInfo",description:"New Flow Info",required:!0,schema:{$ref:"#/definitions/NewFlowRequest"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Flow Id"},500:{description:"Internal Server Error"}}},delete:{tags:["Flow"],description:"Deletes a flow",operationId:"deleteFlow",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Flow Id",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Flow Id"},500:{description:"Internal Server Error"}}}},"/microservices":{get:{tags:["Microservices"],description:"Gets list of microservices",operationId:"getMicroservicesList",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"query",name:"flowId",description:"Flow Id",required:!0,type:"integer"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/GetMicroservicesResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}},post:{tags:["Microservices"],description:"Creates a new microservice on an ioFog node",operationId:"createMicroservice",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"body",name:"NetMicroserviceInfo",description:"New Microserviced Info",required:!0,schema:{$ref:"#/definitions/NewMicroserviceRequest"}}],responses:{201:{description:"Created",schema:{type:"object",properties:{uuid:{type:"string"}}},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},409:{description:"Duplicate Name"},500:{description:"Internal Server Error"}}}},"/microservices/{uuid}":{get:{tags:["Microservices"],description:"Gets a microservice info",operationId:"getMicroserviceInfo",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/MicroserviceInfoResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Not Found"},500:{description:"Internal Server Error"}}},patch:{tags:["Microservices"],description:"Updates a microservice",operationId:"updateMicroservice",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"},{in:"body",name:"UpdateMicroserviceInfo",description:"Microservice Info",required:!0,schema:{$ref:"#/definitions/UpdateMicroserviceRequest"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Not Found"},409:{description:"Duplicate Name"},500:{description:"Internal Server Error"}}},delete:{tags:["Microservices"],description:"Deletes a microservice",operationId:"deleteMicroservice",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"},{in:"query",name:"withCleanUp",description:"Delete with cleanup",required:!0,type:"boolean"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Not Found"},500:{description:"Internal Server Error"}}}},"/microservices/{uuid}/routes/{receiverUuid}":{post:{tags:["Microservices"],description:"Creates a route from microservice to receiver",operationId:"createMicroserviceRoute",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"},{in:"path",name:"receiverUuid",description:"Receiver Microservice Uuid",required:!0,type:"string"}],responses:{201:{description:"Created",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Not Valid"},401:{description:"Not Authorized"},404:{description:"Not Found"},500:{description:"Internal Server Error"}}},delete:{tags:["Microservices"],description:"Deletes a route microservice",operationId:"deleteMicroserviceRoute",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"},{in:"path",name:"receiverUuid",description:"Receiver Microservice Uuid",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Not Valid"},401:{description:"Not Authorized"},404:{description:"Not Found"},500:{description:"Internal Server Error"}}}},"/microservices/{uuid}/port-mapping":{post:{tags:["Microservices"],description:"Creates a port mapping for microservice",operationId:"createMicroservicePortMapping",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"},{in:"body",name:"portMappingData",description:"information about port mapping",required:!0,schema:{$ref:"#/definitions/PortMappingsRequest"}}],responses:{201:{description:"Created",schema:{$ref:"#/definitions/PortMappingsPublicResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Not Valid"},401:{description:"Not Authorized"},404:{description:"Not Found"},500:{description:"Internal Server Error"}}}},"/microservices/{uuid}/port-mapping-list":{get:{tags:["Microservices"],description:"Get a port mapping list for microservice",operationId:"getMicroservicePortMapping",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"}],responses:{201:{description:"Created",schema:{$ref:"#/definitions/PortMappingsListResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Not Found"},500:{description:"Internal Server Error"}}}},"/microservices/{uuid}/port-mapping/{internalPort}":{delete:{tags:["Microservices"],description:"Deletes a port mapping for microservice",operationId:"deleteMicroservicePortMapping",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"uuid",description:"Microservice Uuid",required:!0,type:"string"},{in:"path",name:"internalPort",description:"Receiver Microservice Id",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Not Found"},500:{description:"Internal Server Error"}}}},"/microservices/{id}/image-snapshot":{post:{tags:["Diagnostics"],description:"Send request to create image snapshot",operationId:"createImageSnapshot",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Microservice Id",required:!0,type:"string"}],responses:{201:{description:"Created",schema:{type:"object",properties:{id:{type:"string"}}},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Microservice Id"},500:{description:"Internal Server Error"}}},get:{tags:["Diagnostics"],description:"Download image snapshot",operationId:"downloadImageSnapshot",produces:["application/gzip"],parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Microservice Id",required:!0,type:"string"}],responses:{200:{description:"Created",schema:{type:"file"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Microservice Id"},500:{description:"Internal Server Error"}}}},"/microservices/{id}/strace":{patch:{tags:["Diagnostics"],description:"Enables Microservice Strace Option",operationId:"enableMicroserviceStrace",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Microservice Id",required:!0,type:"string"},{in:"body",name:"EnableOption",description:"Strace info to enable or disable feature",required:!0,schema:{type:"object",properties:{enable:{type:"boolean"}}}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Microservice Id"},500:{description:"Internal Server Error"}}},get:{tags:["Diagnostics"],description:"Gets Strace Data for Microservice",operationId:"getMicroserviceStrace",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"path",name:"id",description:"Microservice Id",required:!0,type:"string"},{in:"query",name:"format",required:!0,type:"string",enum:["file","string"]}],responses:{200:{description:"Success",schema:{type:"object",properties:{data:{type:"string"}}},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Microservice Id"},500:{description:"Internal Server Error"}}},put:{tags:["Diagnostics"],description:"Posts Microservice Strace file to FTP",operationId:"postMicroserviceStraceToFTP",parameters:[{in:"path",required:!0,name:"id",description:"Microservice Id",type:"string"},{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"body",name:"straceData",required:!0,schema:{$ref:"#/definitions/MicroserviceStraceFTPBody"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Microservice Id"},500:{description:"Internal Server Error"}}}},"/iofog/{uuid}/tunnel":{patch:{tags:["Tunnel"],description:"Opens/closes ssh tunnel",operationId:"openIOFogNodeSshTunnel",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"body",name:"Action",required:!0,schema:{$ref:"#/definitions/ActionBody"}},{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}},get:{tags:["Tunnel"],description:"Gets current info about ioFog node ssh tunnel status",operationId:"getIOFogNodeSshTunnelStatusInfo",parameters:[{in:"path",name:"uuid",description:"ioFog node id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/IOFogNodeTunnelStatusInfoResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/registries":{post:{tags:["Registries"],description:"Creates new registry",operationId:"createRegistry",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"body",name:"Filters",required:!1,schema:{$ref:"#/definitions/RegistryBody"}}],responses:{201:{description:"Created",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}},get:{tags:["Registries"],description:"Gets list of registries",operationId:"getRegistryList",parameters:[{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/RegistriesListResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/registries/{id}":{delete:{tags:["Registries"],description:"Deletes a registry",operationId:"deleteRegistry",parameters:[{in:"path",name:"id",description:"Registry id",required:!0,type:"string"},{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{204:{description:"Deleted",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},404:{description:"Invalid Node Id"},500:{description:"Internal Server Error"}}}},"/user/login":{post:{tags:["User"],description:"Login",operationId:"login",parameters:[{in:"body",name:"credentials",required:!0,schema:{$ref:"#/definitions/LoginRequest"}}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/LoginSuccessResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"bad request"},401:{description:"incorrect credentials"}}}},"/user/logout":{post:{tags:["User"],description:"Logout",operationId:"logout",parameters:[{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{204:{description:"Success"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/user/signup":{post:{tags:["User"],description:"Signup",operationId:"signup",parameters:[{in:"body",name:"user",description:"new user data",required:!0,schema:{$ref:"#/definitions/SignupRequest"}}],responses:{201:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},500:{description:"Internal Server Error"}}}},"/user/signup/resend-activation":{get:{tags:["User"],description:"Resend activation email",operationId:"resendActivationEmail",parameters:[{in:"query",name:"email",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},500:{description:"Internal Server Error"}}}},"/user/activate":{post:{tags:["User"],description:"Activate account",operationId:"activateAccount",parameters:[{in:"body",name:"activationCode",description:"activation code",required:!0,schema:{$ref:"#/definitions/UserActivateRequest"}}],responses:{303:{description:"Redirect to login page",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"},Location:{description:"Login page url",type:"string"}}},404:{description:"Not Found"},500:{description:"Internal Server Error"}}}},"/user/profile":{get:{tags:["User"],description:"Get current user profile data",operationId:"getUserProfile",parameters:[{in:"header",name:"Authorization",description:"User token",required:!0,type:"string"}],responses:{200:{description:"Success",schema:{$ref:"#/definitions/UserProfileDetailsResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}},patch:{tags:["User"],description:"Update user profile",operationId:"updateUserProfile",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"body",name:"profileData",description:"Updated profile data",required:!0,schema:{$ref:"#/definitions/UserProfileUpdatesRequest"}}],responses:{200:{description:"Updated user profile",schema:{$ref:"#/definitions/UserProfileDetailsResponse"},headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}},delete:{tags:["User"],description:"Delete account",operationId:"deleteAccount",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}}},"/user/password":{patch:{tags:["User"],description:"change password",operationId:"changePassword",parameters:[{in:"header",name:"Authorization",description:"User Token",required:!0,type:"string"},{in:"body",name:"passwordUpdates",description:"current and new password",required:!0,schema:{$ref:"#/definitions/PasswordChangeRequest"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},400:{description:"Bad Request"},401:{description:"Not Authorized"},500:{description:"Internal Server Error"}}},delete:{tags:["User"],description:"Reset password",operationId:"resetPassword",parameters:[{in:"body",name:"email",description:"email",required:!0,schema:{$ref:"#/definitions/PasswordResetRequest"}}],responses:{204:{description:"Success",headers:{"X-Timestamp":{type:"number",description:"FogController server timestamp"}}},404:{description:"Not Found"},500:{description:"Internal Server Error"}}}}},definitions:{ServiceStatusResponse:{type:"object",properties:{status:{type:"string",example:"ok"},timestamp:{type:"number"}}},EmailActivationStatusResponse:{type:"object",properties:{isEmailActivationEnabled:{type:"boolean"}}},IOFogTypesResponse:{type:"object",properties:{fogTypes:{type:"array",items:{$ref:"#/definitions/IOFogType"}}}},IOFogType:{type:"object",properties:{id:{type:"number"},name:{type:"string"},image:{type:"string"},description:{type:"string"}}},IOFogNodesListFilters:{type:"array",items:{type:"object",properties:{key:{type:"string"},value:{type:"string"},condition:{type:"string"}}}},IOFogNodesListResponse:{type:"object",properties:{instances:{type:"array",items:{$ref:"#/definitions/IOFogNodeInfoResponse"}}}},IOFogNodeInfoResponse:{type:"object",properties:{id:{type:"string"},name:{type:"string"},location:{type:"string"},gpsMode:{type:"string"},latitude:{type:"number"},longitude:{type:"number"},description:{type:"string"},createAt:{type:"number"},updatedAt:{type:"number"},lastActive:{type:"number"},daemonStatus:{type:"string"},daemonOperatingDuration:{type:"number"},daemonLastStart:{type:"number"},memoryUsage:{type:"number"},diskUsage:{type:"number"},cpuUsage:{type:"number"},memoryViolation:{type:"boolean"},diskViolation:{type:"boolean"},cpuViolation:{type:"boolean"},microserviceStatus:{type:"string"},repositoryCount:{type:"number"},repositoryStatus:{type:"string"},lastStatusTime:{type:"number"},ipAddress:{type:"string"},processedMessages:{type:"number"},microserviceMessageCounts:{type:"number"},messageSpeed:{type:"number"},lastCommandTime:{type:"number"},networkInterface:{type:"string"},dockerUrl:{type:"string"},diskLimit:{type:"number"},diskDirectory:{type:"string"},memoryLimit:{type:"number"},cpuLimit:{type:"number"},logLimit:{type:"number"},logDirectory:{type:"string"},bluetoothEnabled:{type:"boolean"},abstractedHardwareEnabled:{type:"boolean"},watchdogEnabled:{type:"boolean"},logFileCount:{type:"number"},version:{type:"string"},isReadyToUpgrade:{type:"boolean"},isReadyToRollback:{type:"boolean"},statusFrequency:{type:"number"},changeFrequency:{type:"number"},deviceScanFrequency:{type:"number"},proxy:{type:"string"},type:{$ref:"#/definitions/IOFogType"}}},UpdateIOFogNodeRequestBody:{type:"object",properties:{name:{type:"string"},location:{type:"string"},latitude:{type:"number"},longitude:{type:"number"},description:{type:"string"},dockerUrl:{type:"string",default:"unix:///var/run/docker.sock"},diskLimit:{type:"number",default:50},diskDirectory:{type:"string",default:"/var/lib/iofog"},memoryLimit:{type:"number",default:4096,format:"MB"},cpuLimit:{type:"number",default:80,format:"percent"},logLimit:{type:"number",default:10,format:"GB"},logDirectory:{type:"string",default:"/var/log/iofog"},logFileCount:{type:"number",default:10},statusFrequency:{type:"number",default:10,format:"seconds"},changeFrequency:{type:"number",default:20,format:"seconds"},deviceScanFrequency:{type:"number",default:20,format:"seconds"},bluetoothEnabled:{type:"boolean",default:!1},watchdogEnabled:{type:"boolean",default:!0},abstractedHardwareEnabled:{type:"boolean",default:!1},fogType:{type:"number"}}},NewIOFogNodeResponse:{type:"object",properties:{id:{type:"string"}}},ProvisioningKeyResponse:{type:"object",properties:{key:{type:"string"},expirationTime:{type:"number"}}},AgentProvisioningRequest:{type:"object",required:["type","key"],properties:{type:{type:"number",enum:[1,2],description:"Architecture\n * '1': x86\n * '2': arm\n"},key:{type:"string",description:"provisioning key"}}},AgentProvisioningResponse:{type:"object",properties:{id:{type:"string",description:"ioFog Node Id"},token:{type:"string",description:"Agent token"}}},IOFogNodeConfigChanges:{type:"object",properties:{config:{type:"boolean"},version:{type:"boolean"},reboot:{type:"boolean"},deleteNode:{type:"boolean"},microservicesList:{type:"boolean"},microservicesConfig:{type:"boolean"},routing:{type:"boolean"},registries:{type:"boolean"},tunnel:{type:"boolean"},diagnostics:{type:"boolean"},isImageSnapshot:{type:"boolean"}}},IOFogNodeConfig:{type:"object",properties:{networkInterface:{type:"string"},dockerUrl:{type:"string"},diskLimit:{type:"number"},diskDirectory:{type:"string"},memoryLimit:{type:"number"},cpuLimit:{type:"number"},logLimit:{type:"number"},logDirectory:{type:"string"},logFileCount:{type:"number"},statusFrequency:{type:"number"},changeFrequency:{type:"number"},deviceScanFrequency:{type:"number"},watchdogEnabled:{type:"boolean"},latitude:{type:"number"},longitude:{type:"number"}}},IOFogNodeConfigRequest:{type:"object",properties:{networkInterface:{type:"string"},dockerUrl:{type:"string"},diskLimit:{type:"number"},diskDirectory:{type:"string"},memoryLimit:{type:"number"},cpuLimit:{type:"number"},logLimit:{type:"number"},logDirectory:{type:"string"},logFileCount:{type:"number"},statusFrequency:{type:"number"},changeFrequency:{type:"number"},deviceScanFrequency:{type:"number"},watchdogEnabled:{type:"boolean"},latitude:{type:"number"},longitude:{type:"number"},gpsMode:{type:"string"}}},AgentStatus:{type:"object",properties:{daemonStatus:{type:"string"},daemonOperatingDuration:{type:"number"},daemonLastStart:{type:"number"},memoryUsage:{type:"number"},diskUsage:{type:"number"},cpuUsage:{type:"number"},memoryViolation:{type:"boolean"},diskViolation:{type:"boolean"},cpuViolation:{type:"boolean"},microserviceStatus:{type:"string"},repositoryCount:{type:"number"},repositoryStatus:{type:"string"},systemTime:{type:"number"},lastStatusTime:{type:"number"},ipAddress:{type:"string"},processedMessages:{type:"number"},microserviceMessageCounts:{type:"string"},messageSpeed:{type:"number"},lastCommandTime:{type:"number"},tunnelStatus:{type:"string"},version:{type:"string"},isReadyToUpgrade:{type:"boolean"},isReadyToRollback:{type:"boolean"}}},IOFogNodeProxyConfigResponse:{type:"object",properties:{username:{type:"string"},password:{type:"string"},host:{type:"string"},remotePort:{type:"number"},localPort:{type:"number"},rsaKey:{type:"string"},closed:{type:"boolean"}}},IOFogNodeStraceResponse:{type:"object",properties:{straceValues:{type:"array",items:{$ref:"#/definitions/MicroserviceStrace"}}}},MicroserviceStrace:{type:"object",properties:{microserviceId:{type:"string"},straceRun:{type:"boolean"}}},IOFogNodeStraceBuffer:{type:"object",properties:{straceData:{type:"array",items:{$ref:"#/definitions/MicroserviceStraceBuffer"}}}},MicroserviceStraceBuffer:{type:"object",properties:{microserviceId:{type:"string"},buffer:{type:"string"}}},MicroserviceStraceFTPBody:{type:"object",properties:{ftpHost:{type:"string"},ftpPort:{type:"number"},ftpUser:{type:"string"},ftpPass:{type:"string"},ftpDestDir:{type:"string"}}},AgentMicroservicesListResponse:{type:"array",items:{$ref:"#/definitions/AgentMicroservicesInfoResponse"}},AgentMicroservicesInfoResponse:{type:"object",properties:{uuid:{type:"string"},needUpdate:{type:"boolean"},rebuild:{type:"boolean"},rootHostAccess:{type:"boolean"},logSize:{type:"number"},imageId:{type:"string"},registryUrl:{type:"string"},portMappings:{type:"array",items:{$ref:"#/definitions/PortMappingAgentRequest"}},VolumeMappings:{type:"array",items:{$ref:"#/definitions/VolumeMappingAgentRequest"}},imageSnapshot:{type:"string"},removeWithCleanUp:{type:"boolean"},routes:{$ref:"#/definitions/ReceiverMicroservices"}}},ReceiverMicroservices:{type:"array",items:{type:"string"}},VolumeMappingAgentRequest:{type:"object",properties:{hostDestination:{type:"string",example:"/var/dest"},containerDestination:{type:"string",example:"/var/dest"},accessMode:{type:"string",example:"rw"}}},PortMappingsResponse:{type:"object",properties:{internal:{type:"number"},external:{type:"number"},publicMode:{type:"boolean"}}},PortMappingsRequest:{type:"object",properties:{internal:{type:"number"},external:{type:"number"},publicMode:{type:"boolean"}}},PortMappingsPublicResponse:{type:"object",properties:{publicIp:{type:"string"},publicPort:{type:"number"}}},PortMappingsListResponse:{type:"array",items:{$ref:"#/definitions/PortMappingsItemResponse"}},PortMappingsItemResponse:{type:"object",properties:{internal:{type:"number"},external:{type:"number"},publicMode:{type:"boolean"},publicIp:{type:"string"},publicPort:{type:"number"}}},PortMappingAgentRequest:{type:"object",properties:{outsidecontainer:{type:"string",example:80},insidecontainer:{type:"string",example:80}}},RegistriesListResponse:{type:"array",items:{$ref:"#/definitions/RegistryResponse"}},RegistryResponse:{type:"object",properties:{id:{type:"number"},url:{type:"string"},isPublic:{type:"boolean"},isSecure:{type:"boolean"},certificate:{type:"string"},requiresCert:{type:"boolean"},username:{type:"string"},password:{type:"string"},userEmail:{type:"string"},userId:{type:"string"}}},RegistryBody:{type:"object",properties:{url:{type:"string"},isPublic:{type:"boolean"},username:{type:"string"},password:{type:"string"},email:{type:"string"}}},ActionBody:{type:"object",properties:{action:{type:"string",enum:["open","close"]}}},MicroservicesCatalogResponse:{type:"array",items:{$ref:"#/definitions/CatalogItemInfoResponse"}},CatalogItemInfoResponse:{type:"object",properties:{id:{type:"string"},name:{type:"string"},description:{type:"string"},category:{type:"string"},publisher:{type:"string"},diskRequired:{type:"number"},ramRequired:{type:"number"},picture:{type:"string"},isPublic:{type:"boolean"},registryId:{type:"number"},inputType:{$ref:"#/definitions/InfoTypeResponse"},outputType:{$ref:"#/definitions/InfoTypeResponse"},configExample:{type:"string"},images:{$ref:"#/definitions/ElementContainerImages"}}},InfoTypeResponse:{type:"object",properties:{infoType:{type:"string"},infoFormat:{type:"string"}}},ElementContainerImages:{type:"array",items:{$ref:"#/definitions/ElementContainerImage"}},ElementContainerImage:{type:"object",properties:{containerImage:{type:"string"},fogTypeId:{type:"number",enum:[1,2]}}},CreateUpdateCatalogItemRequestBody:{type:"object",properties:{name:{type:"string"},description:{type:"string"},category:{type:"string"},images:{$ref:"#/definitions/ElementContainerImages"},publisher:{type:"string"},diskRequired:{type:"number"},ramRequired:{type:"number"},picture:{type:"string"},isPublic:{type:"boolean"},registryId:{type:"number"},inputType:{$ref:"#/definitions/InfoTypeResponse"},outputType:{$ref:"#/definitions/InfoTypeResponse"},configExample:{type:"string"}}},GetFlowsResponse:{type:"array",items:{$ref:"#/definitions/FlowInfoResponse"}},FlowInfoResponse:{type:"object",properties:{id:{type:"string"},name:{type:"string"},updatedBy:{type:"number"},description:{type:"string"},isActivated:{type:"boolean"},createdAt:{type:"number"},updatedAt:{type:"number"},userId:{type:"number"}}},NewFlowRequest:{type:"object",properties:{name:{type:"string"},description:{type:"string"},isActivated:{type:"boolean"}}},GetMicroservicesResponse:{type:"array",items:{$ref:"#/definitions/MicroserviceInfoResponse"}},MicroserviceInfoResponse:{type:"object",properties:{uuid:{type:"string"},name:{type:"string"},config:{type:"string"},images:{$ref:"#/definitions/ElementContainerImages"},picture:{type:"string"},status:{type:"string"},ioFogNodeId:{type:"string"},isNetwork:{type:"boolean"},needUpdate:{type:"boolean"},rebuild:{type:"boolean"},rootHostAccess:{type:"boolean"},deleteWithCleanUp:{type:"boolean"},strace:{type:"boolean"},imageSnapshot:{type:"string"},logLimit:{type:"number"},volumeMappings:{type:"array",items:{$ref:"#/definitions/VolumeMappingAgentRequest"}},ports:{type:"array",items:{$ref:"#/definitions/PortMappingsResponse"}},routes:{$ref:"#/definitions/ReceiverMicroservices"}}},NewMicroserviceRequest:{type:"object",properties:{name:{type:"string"},config:{type:"string"},catalogItemId:{type:"integer"},flowId:{type:"integer"},ioFogNodeId:{type:"string"},rootHostAccess:{type:"boolean"},logLimit:{type:"number"},volumeMappings:{type:"array",items:{$ref:"#/definitions/VolumeMappingAgentRequest"}},ports:{type:"array",items:{$ref:"#/definitions/PortMappingsRequest"}},routes:{$ref:"#/definitions/ReceiverMicroservices"}}},UpdateMicroserviceRequest:{type:"object",required:["name"],properties:{name:{type:"string"},config:{type:"string"},rebuild:{type:"boolean"},ioFogNodeId:{type:"string"},rootHostAccess:{type:"boolean"},logLimit:{type:"number"},volumeMappings:{type:"array",items:{$ref:"#/definitions/VolumeMappingAgentRequest"}}}},IOFogNodeTunnelStatusInfoResponse:{type:"object",properties:{username:{type:"string"},host:{type:"string"},remotePort:{type:"number"},localPort:{type:"number"},status:{type:"string"}}},LoginRequest:{type:"object",required:["email","password"],properties:{email:{type:"string"},password:{type:"string"}}},LoginSuccessResponse:{type:"object",required:["accessToken"],properties:{accessToken:{type:"string"}}},UserProfileDetailsResponse:{type:"object",required:["firstName","lastName","email"],properties:{firstName:{type:"string"},lastName:{type:"string"},email:{type:"string"}}},UserProfileUpdatesRequest:{type:"object",properties:{firstName:{type:"string"},lastName:{type:"string"}}},UserActivateRequest:{type:"object",required:["activationCode"],properties:{activationCode:{type:"string"}}},PasswordResetRequest:{type:"object",required:["email"],properties:{email:{type:"string"}}},PasswordChangeRequest:{type:"object",required:["oldPassword","newPassword"],properties:{oldPassword:{type:"string"},newPassword:{type:"string"}}},SignupRequest:{type:"object",required:["firstName","lastName","email","password"],properties:{firstName:{type:"string"},lastName:{type:"string"},email:{type:"string"},password:{type:"string"}}},VersionCommandResponse:{type:"object",required:["versionCommand","provisionKey","expirationTime"],properties:{versionCommand:{type:"string"},provisionKey:{type:"string"},expirationTime:{type:"string"}}},HalInfo:{type:"object",required:["info"],properties:{info:{type:"string"}}},ImageSnapshotResponse:{type:"object",required:["uuid"],properties:{uuid:{type:"string"}}},ImageSnapshotRequest:{type:"object",required:["upstream"],properties:{upstream:{type:"string"}}}},schemes:["http","https"],host:"localhost:54421",basePath:"/api/v3"}}}]);
//# sourceMappingURL=component---src-templates-post-jsx-ac5091a8a1df03f35fcd.js.map