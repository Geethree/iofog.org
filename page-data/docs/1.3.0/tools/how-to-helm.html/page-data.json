{"componentChunkName":"component---src-templates-post-jsx","path":"/docs/1.3.0/tools/how-to-helm.html","webpackCompilationHash":"639350134ee635d20c51","result":{"data":{"markdownRemark":{"html":"<h1 id=\"helm-guide---how-to-install-iofog-using-helm\"><a href=\"#helm-guide---how-to-install-iofog-using-helm\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Helm Guide - How to Install ioFog Using Helm</h1>\n<p>In this tutorial, we will go through a deployment of ioFog stack into an existing Kubernetes cluster. The ioFog stack consists of basic services (Controller, Connector) and supplementary Kubernetes ioFog components (Operator, Kubelet). This is the foundation for establishing a complete Edge Compute Network (ECN) with Agents and microservices. See <a href=\"../getting-started/core-concepts.html\">Core Concepts</a> for more details on ioFog components.</p>\n<p>IoFog Helm chart allows users to easily deploy the ioFog stack onto exiting Kubernetes cluster.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h2>\n<p>First, we need a working Kubernetes cluster. We can simply set up a cluster on the Google Kubernetes Engine (GKE) by following the <a href=\"https://cloud.google.com/kubernetes-engine/docs/how-to/creating-a-cluster\">Creating a cluster tutorial</a>. Using any other managed cluster providers works as well, so do custom installations of Kubernetes, e.g. Minikube.</p>\n<p>IoFog also provides <a href=\"https://github.com/eclipse-iofog/platform\">tools for infrastructure setup</a> to setup a Kubernetes cluster in case we don't have one available. Please see <a href=\"./platform-tools.html\">Platform Tools</a> for more details.</p>\n<p>The tutorial requires installation of <code class=\"language-text\">Helm</code> and <code class=\"language-text\">kubectl</code> executing the deployment.</p>\n<ul>\n<li><a href=\"https://helm.sh/docs/using_helm/#installing-helm\">Helm installation instructions</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/tools/install-kubectl/\">kubectl installation instructions</a></li>\n</ul>\n<p>From now on, we assume we have a running Kubernetes cluster. We can verify that our kubernetes cluster is working by running <code class=\"language-text\">kubectl cluster-info</code>. The output of a working cluster will look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ kubectl cluster-info\nKubernetes master is running at https://1.2.3.4\nGLBCDefaultBackend is running at https://1.2.3.4/api/v1/namespaces/kube-system/services/default-http-backend:http/proxy\nHeapster is running at https://1.2.3.4/api/v1/namespaces/kube-system/services/heapster/proxy\nKubeDNS is running at https://1.2.3.4/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy\nkubernetes-dashboard is running at https://1.2.3.4/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy\nMetrics-server is running at https://1.2.3.4/api/v1/namespaces/kube-system/services/https:metrics-server:/proxy\n\nTo further debug and diagnose cluster problems, use &#39;kubectl cluster-info dump&#39;.</code></pre>\n      </div>\n<h2 id=\"create-service-account-for-tiller\"><a href=\"#create-service-account-for-tiller\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Service Account for Tiller</h2>\n<p>Now that our cluster is up and running, we have to prepare the cluster for Helm installation.</p>\n<p>On RBAC enabled Kubernetes clusters (e.g. GKE, AKE), it is necessary to create a service account for Tiller before initializing helm itself. See <a href=\"https://helm.sh/docs/using_helm/#tiller-and-role-based-access-control\">helm init instructions</a> for more details.</p>\n<p>In order to create the cluster role binding on GKE, we need to have <code class=\"language-text\">roles/container.admin</code> permission. If our account doesn't have the role, it can be added using the following command or in the GCP Console.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">gcloud projects add-iam-policy-binding <span class=\"token variable\">$GCP_PROJECT</span> --member<span class=\"token operator\">=</span>user:person@company.com --role<span class=\"token operator\">=</span>roles/container.admin</code></pre>\n      </div>\n<p>Then we can create service account for Tiller and bind cluster-admin role.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">kubectl create serviceaccount --namespace kube-system tiller\nkubectl create clusterrolebinding tiller \\\n    --clusterrole<span class=\"token operator\">=</span>cluster-admin \\\n    --serviceaccount<span class=\"token operator\">=</span>kube-system:tiller</code></pre>\n      </div>\n<h2 id=\"initialize-helm-and-install-tiller\"><a href=\"#initialize-helm-and-install-tiller\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Initialize Helm And Install Tiller</h2>\n<p>Now is the time to use our service account to initialize Helm.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">helm init --service-account tiller --wait</code></pre>\n      </div>\n<p>Note that on Azure Kubernetes Service (AKS), we will also need to specify node selectors for Tiller.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">helm init --service-account tiller --node-selectors <span class=\"token string\">\"beta.kubernetes.io/os\"</span><span class=\"token operator\">=</span><span class=\"token string\">\"linux\"</span> --wait</code></pre>\n      </div>\n<h2 id=\"install-iofog-stack\"><a href=\"#install-iofog-stack\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install ioFog Stack</h2>\n<p>Add this Helm repository to our Helm repository index and install the ioFog stack and Kubernetes services</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">helm repo add iofog https://eclipse-iofog.github.io/helm</code></pre>\n      </div>\n<p>We can list all available versions of the ioFog Helm chart using <code class=\"language-text\">helm search -l iofog/iofog</code>. From Helm 2.16 onwards, only charts with production versions are listed by default. To list all versions, including development versions, use <code class=\"language-text\">helm search -l --devel iofog</code></p>\n<p>To install a specific version of ioFog, use <code class=\"language-text\">--version &lt;desired-version&gt;</code> parameter to <code class=\"language-text\">helm install</code></p>\n<p><em>Keep in mind if there already is any existing ioFog stack on the cluster, a set of Custom Resource Definitions has probably already been created. In such case, you will need to disable deploying these CRDs as described in <a href=\"#multiple-edge-compute-networks\">Multiple Edge Compute Networks</a>.</em></p>\n<p>The final <code class=\"language-text\">helm install</code> command to install ioFog with CRDs then looks like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> \\\n    --set controlPlane.user.email<span class=\"token operator\">=</span>user@domain.com \\\n    --set controlPlane.user.password<span class=\"token operator\">=</span>any123password345 \\\n    --version 1.3.0 \\\n    --namespace my-ecn \\\n    --name my-ecn \\\n    iofog/iofog</code></pre>\n      </div>\n<p>The <code class=\"language-text\">--name my-ecn</code> refers to the Helm release name as shown below, while the <code class=\"language-text\">--namespace my-ecn</code> refers to the namespace taken by the Helm release in the target Kubernetes cluster.</p>\n<p>To list all Helm releases (including deployed ioFog stacks), we can simply run <code class=\"language-text\">helm list</code>. The result should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"plain\">\n      <pre class=\"language-plain\"><code class=\"language-plain\">NAME      \tREVISION\tUPDATED                 \tSTATUS  \tCHART          \t    APP VERSION\t  NAMESPACE\nmy-ecn     \t1       \tTue Oct  1 21:34:42 2019\tDEPLOYED\tiofog-1.3.0\t        1.3.0 \t      my-ecn</code></pre>\n      </div>\n<p>The following is a complete list of all user configurable properties for the ioFog Helm chart. All of the properties are optional and have defaults. Use <code class=\"language-text\">--set property.name=value</code> in <code class=\"language-text\">helm install</code> to parametrize Helm release.</p>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>Default value</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>createCustomResources</td>\n<td>true</td>\n<td>See <a href=\"#multiple-edge-compute-networks\">Multiple Edge Compute Networks</a></td>\n</tr>\n<tr>\n<td>controlPlane.user.firstName</td>\n<td>First</td>\n<td>First name of initial user in Controller</td>\n</tr>\n<tr>\n<td>controlPlane.user.surname</td>\n<td>Second</td>\n<td>Surname of initial user in Controller</td>\n</tr>\n<tr>\n<td>controlPlane.user.email</td>\n<td>user@domain.com</td>\n<td>Email (login) of initial user in Controller</td>\n</tr>\n<tr>\n<td>controlPlane.user.password</td>\n<td>H23fkidf9hoibf2nlk</td>\n<td>Password of initial user in Controller</td>\n</tr>\n<tr>\n<td>controlPlane.controller.replicas</td>\n<td>1</td>\n<td>Number of replicas of Controller pods</td>\n</tr>\n<tr>\n<td>controlPlane.controller.image</td>\n<td>iofog/controller:1.3.1</td>\n<td><a href=\"https://hub.docker.com/r/iofog/controller/tags\">Controller Docker image</a></td>\n</tr>\n<tr>\n<td>controlPlane.controller.imagePullPolicy</td>\n<td>Always</td>\n<td>Controller Docker image <a href=\"https://kubernetes.io/docs/concepts/containers/images/\">pull policy</a></td>\n</tr>\n<tr>\n<td>controlPlane.kubeletImage</td>\n<td>iofog/iofog-kubelet:1.3.0</td>\n<td><a href=\"https://hub.docker.com/r/iofog/iofog-kubelet/tags\">Kubelet Docker image</a></td>\n</tr>\n<tr>\n<td>controlPlane.loadBalancerIp</td>\n<td></td>\n<td>Pre-allocated static IP address for Controller</td>\n</tr>\n<tr>\n<td>controlPlane.serviceType</td>\n<td>LoadBalancer</td>\n<td>Service type for Controller (one of <code class=\"language-text\">LoadBalancer</code>, <code class=\"language-text\">NodePort</code> or <code class=\"language-text\">ClusterIP</code>)</td>\n</tr>\n<tr>\n<td>connectors.image</td>\n<td>iofog/connector:1.3.0</td>\n<td><a href=\"https://hub.docker.com/r/iofog/connector/tags\">Connector Docker image</a></td>\n</tr>\n<tr>\n<td>connectors.serviceType</td>\n<td>LoadBalancer</td>\n<td>Service type for Connector (one of <code class=\"language-text\">LoadBalancer</code>, <code class=\"language-text\">NodePort</code> or <code class=\"language-text\">ClusterIP</code>)</td>\n</tr>\n<tr>\n<td>connectors.instanceNames</td>\n<td><code class=\"language-text\">[&quot;first&quot;,&quot;second&quot;]</code></td>\n<td>Array of Connector instance names</td>\n</tr>\n<tr>\n<td>operator.replicas</td>\n<td>1</td>\n<td>Number of replicas of Operator pods</td>\n</tr>\n<tr>\n<td>operator.image</td>\n<td>iofog/iofog-operator:1.3.0</td>\n<td><a href=\"https://hub.docker.com/r/iofog/iofog-operator/tags\">OperatorDocker image</a></td>\n</tr>\n<tr>\n<td>operator.imagePullPolicy</td>\n<td>Always</td>\n<td>Operator Docker image <a href=\"https://kubernetes.io/docs/concepts/containers/images/\">pull policy</a></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"connection-to-installed-iofog\"><a href=\"#connection-to-installed-iofog\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connection to Installed ioFog</h3>\n<p>Once the installation is complete, you will be able to connect to the ioFog Controller on K8s using <a href=\"../iofogctl/usage.html\">iofogctl</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl connect --kube ~/.kube/config --name k8s-ctrl --email user@domain.com --pass any123password345 -n my-ecn</code></pre>\n      </div>\n<p>Once you are connected, you can use <code class=\"language-text\">iofogctl</code> to deploy edge Agents. Then, you can use <code class=\"language-text\">kubectl</code> or <code class=\"language-text\">iofogctl</code> to deploy microservices to your edge Agents. See <a href=\"../remote-deployment/setup-your-agents.html\">Setup Your Agents</a> and <a href=\"../iofogctl/usage.html\">Introduction to iofogctl</a> for more details.</p>\n<h3 id=\"multiple-edge-compute-networks\"><a href=\"#multiple-edge-compute-networks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Multiple Edge Compute Networks</h3>\n<p>If we want to have multiple instances of ioFog on the same Kubernetes cluster, it is necessary to tell Helm not to install custom resource definitions. This can be done by overriding the <code class=\"language-text\">createCustomResources</code> (default: <code class=\"language-text\">true</code>) variable.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">helm <span class=\"token function\">install</span> \\\n    --set createCustomResources<span class=\"token operator\">=</span>false \\\n    --set controlPlane.user.email<span class=\"token operator\">=</span>user@domain.com \\\n    --set controlPlane.user.password<span class=\"token operator\">=</span>any123password345 \\\n    --version 1.3.0 \\\n    --namespace second-ecn \\\n    --name second-ecn \\\n    iofog/iofog</code></pre>\n      </div>\n<p>Only use this option when the ioFog custom resource exists, either from another Helm installation or manual installation using <a href=\"https://github.com/eclipse-iofog/iofogctl\">iofogctl</a>.</p>\n<p>To check if the custom resources exist, run <code class=\"language-text\">kubectl get crd | grep iofog</code>. If the resources exist, we must use <code class=\"language-text\">createCustomResources=false</code> so that Helm does not try to create them again.</p>\n<h2 id=\"uninstall-iofog-stack\"><a href=\"#uninstall-iofog-stack\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uninstall ioFog Stack</h2>\n<p>To uninstall ioFog stack, simply delete the Helm release, where the release name refers to <code class=\"language-text\">--name</code> arguments used during installation.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">helm delete --purge my-ecn</code></pre>\n      </div>\n<p>Note that due to Helm's handing of custom resource definitions, all such definitions are orphaned when a release is created and thus need to be deleted manually.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">kubectl get crds <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> iofog <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'{print <span class=\"token variable\">$1</span>}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">xargs</span> kubectl delete crds</code></pre>\n      </div>","fields":{"slug":"/docs/1.3.0/tools/how-to-helm.html"}},"allConfigJson":{"edges":[{"node":{"version":"1.1.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.1.0/"}}},{"node":{"version":"1.2.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/quick-start.html"}}}}]},{"title":"Remote Deployment","subMenus":[{"title":"Prepare Your Remote Hosts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/prepare-your-remote-hosts.html"}}}},{"title":"Prepare Your Network","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/prepare-your-network.html"}}}},{"title":"Setup Your Control Plane","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-your-controlplane.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-your-agents.html"}}}},{"title":"Setup All-in-one","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-all-in-one.html"}}}}]},{"title":"Tutorial: Developing and deploying microservices","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Tools","subMenus":[{"title":"Introduction to iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/iofogctl/usage.html"}}}},{"title":"Iofogctl YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/iofogctl/yaml-spec.html"}}}},{"title":"Platform Tools","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/platform-tools.html"}}}},{"title":"Helm Guide","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/how-to-helm.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.2.0/"}}},{"node":{"version":"1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.0.0/"}}},{"node":{"version":"1.3.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/getting-started/quick-start.html"}}}}]},{"title":"Platform Deployment","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/introduction.html"}}}},{"title":"Prepare Your Remote Hosts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-remote-hosts.html"}}}},{"title":"Prepare Your Kubernetes Cluster","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-kubernetes-cluster.html"}}}},{"title":"Prepare Your Network","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-network.html"}}}},{"title":"Setup Your Control Plane","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-controlplane.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-agents.html"}}}}]},{"title":"Microservice Development and Deployment","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"iofogctl","subMenus":[{"title":"Introduction to iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/usage.html"}}}},{"title":"Common Header YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/header.html"}}}},{"title":"Platform YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/platform-yaml-spec.html"}}}},{"title":"Agent configuration YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/agent-config-yaml-spec.html"}}}},{"title":"Application YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/application-yaml-spec.html"}}}}]},{"title":"Tools","subMenus":[{"title":"Platform Tools","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tools/platform-tools.html"}}}},{"title":"Helm Guide","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tools/how-to-helm.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/debugging.html"}}}}]},{"title":"Using Microservices Catalog","subMenus":[{"title":"Controller microservices overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/introduction.html"}}}},{"title":"System: Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/diagnostics.html"}}}},{"title":"System: Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/hal.html"}}}},{"title":"System: Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/rest-blue.html"}}}},{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/overview.html"}}}},{"title":"Legacy CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/overview.html"}}}},{"title":"Legacy CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/overview.html"}}}},{"title":"Legacy CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.3.0/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/1.3.0/tools/how-to-helm.html"}}}