{"componentChunkName":"component---src-templates-post-jsx","path":"/docs/1.3.0/tutorial/deploy-our-microservice.html","webpackCompilationHash":"639350134ee635d20c51","result":{"data":{"markdownRemark":{"html":"<h1 id=\"deploy-our-microservice\"><a href=\"#deploy-our-microservice\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy Our Microservice</h1>\n<p>In this step we'll learn how to deploy our newly created microservice to our ioFog tutorial environment.</p>\n<p>Before deploying our new microservice, take a look at the current output of the Freeboard at <a href=\"http://localhost:10102/?load=dashboard.json\" target=\"_blank\">http://localhost:10102/?load=dashboard.json</a></p>\n<h2 id=\"register-our-docker-image\"><a href=\"#register-our-docker-image\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Register Our Docker Image</h2>\n<p>With our Docker image from the previous step in hand, it's time to publish it to a <a href=\"https://docs.docker.com/registry/\">Docker Registry</a>.</p>\n<p>While we can use a custom registry (or the public <a href=\"https://hub.docker.com/\">Docker Hub</a>), the Controller also comes with a built-in private registry that represents the local cache on the ioFog edge compute nodes.</p>\n<p>To get a list of the container registries, we can use the legacy Controller CLI <code class=\"language-text\">registry list</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl legacy controller local-controller registry list</code></pre>\n      </div>\n<p>We should see two registries. The first is <a href=\"https://hub.docker.com/\">Docker Hub</a> and the second is the built-in private registry, which we're going to use.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"from_cache\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"isPublic\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"isSecure\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"certificate\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"requiresCert\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"username\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"userEmail\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"userId\"</span><span class=\"token operator\">:</span> <span class=\"token null\">null</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>The unique ID for the built-in registry is always <code class=\"language-text\">2</code>, and always <code class=\"language-text\">1</code> for Docker hub.</p>\n<h2 id=\"add-our-microservice\"><a href=\"#add-our-microservice\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Our Microservice</h2>\n<p>The Docker image containing our microservice code is registered with our local image cache. We can spin up new copies of it using the Controller through <code class=\"language-text\">iofogctl</code>.</p>\n<p>If you spent some time looking around the folder structure, you might have noticed the file <code class=\"language-text\">init/tutorial/config.yaml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\">\n      <pre class=\"language-yaml\"><code class=\"language-yaml\">$ cat init/tutorial/config.yaml\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> iofog.org/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Application\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> tutorial\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">microservices</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Sensors\n      <span class=\"token key atrule\">agent</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> local<span class=\"token punctuation\">-</span>agent\n      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">x86</span><span class=\"token punctuation\">:</span> iofog/sensors<span class=\"token punctuation\">:</span>latest\n        <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span> remote\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Rest API\n      <span class=\"token key atrule\">agent</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> local<span class=\"token punctuation\">-</span>agent\n      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">x86</span><span class=\"token punctuation\">:</span> iofog/freeboard<span class=\"token punctuation\">-</span>api<span class=\"token punctuation\">:</span>latest\n        <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span> remote\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">internal</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10101</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Freeboard\n      <span class=\"token key atrule\">agent</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> local<span class=\"token punctuation\">-</span>agent\n      <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n      <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">x86</span><span class=\"token punctuation\">:</span> iofog/freeboard<span class=\"token punctuation\">:</span>latest\n        <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span> remote\n      <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n      <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">internal</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n          <span class=\"token key atrule\">external</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10102</span>\n      <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span> Sensors\n      <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span> Rest API</code></pre>\n      </div>\n<p>This yaml file has been used to describe to <code class=\"language-text\">iofogctl</code> what our set of microservices (application) should look like, and how they are configured. You can find a complete description of the YAML format <a href=\"/docs/1.3.0/iofogctl/application-yaml-spec.html\">here</a>, but for now let's focus on the main parts.</p>\n<ul>\n<li>The file describes an application, named <code class=\"language-text\">tutorial</code>.</li>\n<li>It has 3 microservices.</li>\n<li>Each microservice runs on the agent named <code class=\"language-text\">local-agent</code>.</li>\n<li>Each microservice has its own docker image for x86 devices.</li>\n<li>Some microservices expose ports.</li>\n<li>There is a route from the <code class=\"language-text\">Sensors</code> microservice to the <code class=\"language-text\">Rest API</code> microservice.</li>\n</ul>\n<p>To add our new microservice, go ahead and edit this file by adding our new microservice to the list of microservices:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\">\n      <pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Moving Average\n  <span class=\"token key atrule\">agent</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> local<span class=\"token punctuation\">-</span>agent\n  <span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">maxWindowSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">40</span>\n  <span class=\"token key atrule\">images</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">x86</span><span class=\"token punctuation\">:</span> iofog<span class=\"token punctuation\">-</span>tutorial/moving<span class=\"token punctuation\">-</span>average<span class=\"token punctuation\">:</span>v1\n    <span class=\"token key atrule\">registry</span><span class=\"token punctuation\">:</span> local\n  <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code></pre>\n      </div>\n<p>It is very important to note that we are specifying <code class=\"language-text\">local</code> as the value for <code class=\"language-text\">images:registry</code> (instead of <code class=\"language-text\">remote</code> for the other microservices), this instructs the ioFog Agent to use its local cache, and not Docker hub.</p>\n<h2 id=\"setup-our-routes\"><a href=\"#setup-our-routes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup Our Routes</h2>\n<p>Let's change our routes so that our new microservice is placed between the Sensors and the REST API.</p>\n<p>Edit the <code class=\"language-text\">routes</code> section from the YAML file to the following.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\">\n      <pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span> Sensors\n    <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span> Moving Average\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">from</span><span class=\"token punctuation\">:</span> Moving Average\n    <span class=\"token key atrule\">to</span><span class=\"token punctuation\">:</span> Rest API</code></pre>\n      </div>\n<p>Which will effectively create the following pipeline for our data <code class=\"language-text\">Sensor</code> -> <code class=\"language-text\">Moving Average</code> -> <code class=\"language-text\">Rest API</code></p>\n<h2 id=\"update-the-application\"><a href=\"#update-the-application\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update the application</h2>\n<p>Now that our config YAML file is ready and describes the new state of our application, we can use <code class=\"language-text\">iofogctl</code> to deploy our application.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">$ iofogctl deploy application -f init/tutorial/config.yaml</code></pre>\n      </div>\n<p>Verify that the application got updated as expected</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ iofogctl get microservices\n\nMICROSERVICE\tSTATUS\t\tAGENT\t\tCONFIG\t\t          ROUTES\t\t    VOLUMES\t\tPORTS\nRest API\t    RUNNING\t\tlocal-agent\t{}\t\t\t\t\t\t                            10101:80\nFreeboard\t    RUNNING\t\tlocal-agent\t{}\t\t\t\t\t\t                            10102:80\nMoving Average\tQUEUED\t\tlocal-agent\t{&quot;maxWindowSize&quot;:40}  Rest API\nSensors\t\t    RUNNING\t\tlocal-agent\t{}\t\t              Moving Average</code></pre>\n      </div>\n<p>It will take some time for the ioFog Agent to spin up the new microservice. You can monitor the status of our newly created microservice using <code class=\"language-text\">iofogctl get microservices</code>.</p>\n<p>If you don't have access to the YAML file describing your application, you can always retrieve it using iofogctl and running: <code class=\"language-text\">iofogctl describe application APPLICATION_NAME [-o config.yaml]</code></p>\n<h2 id=\"update-a-microservice\"><a href=\"#update-a-microservice\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Update a Microservice</h2>\n<p>Once a microservice is up and running, we will probably need to modify it later, which we can also do with the Controller.</p>\n<p>You can either redeploy the entire application using the same steps we just did. Iofogctl is smart enough to only patch the required changes to an existing application.</p>\n<p>But you can also directly deploy a microservice! First, let's use <code class=\"language-text\">iofogctl</code> to retrieve the microservice configuration for our <code class=\"language-text\">Moving Average</code> microservice.</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ iofogctl describe microservice &#39;Moving Average&#39; -o moving-average.yaml &amp;&amp; cat moving-average.yaml\n\napiVersion: iofog.org/v1\nkind: Microservice\nmetadata:\n  name: Moving Average\n  namespace: default\nspec:\n  uuid: H3cZ2LQ9hxyM6X7X6xV2q2w6mH3zp7Wc\n  name: Moving Average\n  agent:\n    name: local-agent\n    config:\n      dockerUrl: unix:///var/run/docker.sock\n      diskLimit: 50\n      diskDirectory: /var/lib/iofog-agent/\n      memoryLimit: 1024\n      cpuLimit: 80\n      logLimit: 10\n      logDirectory: /var/log/iofog-agent/\n      logFileCount: 10\n      statusFrequency: 30\n      changeFrequency: 60\n      deviceScanFrequency: 60\n      bluetoothEnabled: false\n      watchdogEnabled: false\n      abstractedHardwareEnabled: false\n  images:\n    catalogId: 0\n    x86: iofog-tutorial/moving-average:v1\n    arm: &quot;&quot;\n    registry: local\n  config:\n    maxWindowSize: 40\n  rootHostAccess: false\n  ports: []\n  volumes: []\n  env: []\n  routes:\n  - Rest API\n  application: tutorial</code></pre>\n      </div>\n<p>You will notice a few minor changes compared to the description we provided when we deployed the microservice as part of our application:</p>\n<ul>\n<li>We now have an <code class=\"language-text\">application</code> field. This is required for iofogctl to know which application the microservice is part of.</li>\n<li>The microservice routes destinations are listed under a <code class=\"language-text\">routes</code> field.</li>\n<li>We have many more fields related to the required configuration of the ioFog Agent.</li>\n</ul>\n<p>Find the complete yaml description <a href=\"/docs/1.3.0/iofogctl/application-yaml-spec.html#microservices\">here</a></p>\n<p>Now let's say we want to update the configuration of our microservice!</p>\n<p>Go ahead and edit the newly created <code class=\"language-text\">moving-average.yaml</code> file, and update the <code class=\"language-text\">config</code> field (Warning: not the <code class=\"language-text\">agent:config</code>, but the root <code class=\"language-text\">config</code> field) to the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\">\n      <pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">config</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">maxWindowSize</span><span class=\"token punctuation\">:</span> <span class=\"token number\">100</span></code></pre>\n      </div>\n<p>Then you can use iofogctl to deploy your microservice</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ iofogctl deploy -f moving-average.yaml</code></pre>\n      </div>\n<p>And see the result with</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ iofogctl get microservices\n\nMICROSERVICE\tSTATUS\t\tAGENT\t\tCONFIG\t\t\t        ROUTES\t\tVOLUMES\t\tPORTS\nRest API\t    RUNNING\t\tlocal-agent\t{}\t\t\t\t\t\t\t                    10101:80\nFreeboard\t    RUNNING\t\tlocal-agent\t{}\t\t\t\t\t\t\t                    10102:80\nMoving Average\tRUNNING\t\tlocal-agent\t{&quot;maxWindowSize&quot;:100}\tRest API\nSensors\t\t    RUNNING\t\tlocal-agent\t{}\t\t\t            Moving Average</code></pre>\n      </div>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>Have a look at new output of the <a href=\"http://localhost:10102/?load=dashboard.json\">Freeboard dashboard</a>. This should now display the values modified by moving average and look similar to this:\n<img src=\"/images/Freeboard_2.png\" style=\"max-width:100%;border-radius: 0.3em;margin: 35px 0;\" /></p>\n<p>The magic about microservices and ioFog is that none of those microservice is specifically designed or requires to work with the other microservice. Using ioFog, you can create smart and secure communication channels between independant microservices and easily manage a fleet of Edge devices and microservices.</p>\n<p>Congratulations! You've now have the fundamentals of ioFog. Next, try developing Microservices on an ECN deployed on remote hosts. See this <a href=\"../remote-deployment/introduction.html\">guide</a> for deploying remotely.</p>\n<aside class=\"notifications note\">\n  <h3><img src=\"/images/icos/ico-note.svg\" alt=\"\"> Questions? Run into issues?</h3>\n  <p>If you ran into an issue, have a question, or just want to get plugged into the community, head over to our <a href=\"https://discuss.iofog.org/\">Discussion Forum</a>. We&apos;d love to have you!</p>\n</aside>","fields":{"slug":"/docs/1.3.0/tutorial/deploy-our-microservice.html"}},"allConfigJson":{"edges":[{"node":{"version":"1.1.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.1.0/"}}},{"node":{"version":"1.2.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/quick-start.html"}}}}]},{"title":"Remote Deployment","subMenus":[{"title":"Prepare Your Remote Hosts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/prepare-your-remote-hosts.html"}}}},{"title":"Prepare Your Network","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/prepare-your-network.html"}}}},{"title":"Setup Your Control Plane","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-your-controlplane.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-your-agents.html"}}}},{"title":"Setup All-in-one","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/remote-deployment/setup-all-in-one.html"}}}}]},{"title":"Tutorial: Developing and deploying microservices","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Tools","subMenus":[{"title":"Introduction to iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/iofogctl/usage.html"}}}},{"title":"Iofogctl YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/iofogctl/yaml-spec.html"}}}},{"title":"Platform Tools","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/platform-tools.html"}}}},{"title":"Helm Guide","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/how-to-helm.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.2.0/"}}},{"node":{"version":"1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.0.0/"}}},{"node":{"version":"1.3.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/getting-started/quick-start.html"}}}}]},{"title":"Platform Deployment","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/introduction.html"}}}},{"title":"Prepare Your Remote Hosts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-remote-hosts.html"}}}},{"title":"Prepare Your Kubernetes Cluster","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-kubernetes-cluster.html"}}}},{"title":"Prepare Your Network","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/prepare-your-network.html"}}}},{"title":"Setup Your Control Plane","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-controlplane.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/remote-deployment/setup-your-agents.html"}}}}]},{"title":"Microservice Development and Deployment","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"iofogctl","subMenus":[{"title":"Introduction to iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/usage.html"}}}},{"title":"Common Header YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/header.html"}}}},{"title":"Platform YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/platform-yaml-spec.html"}}}},{"title":"Agent configuration YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/agent-config-yaml-spec.html"}}}},{"title":"Application YAML Specification","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/iofogctl/application-yaml-spec.html"}}}}]},{"title":"Tools","subMenus":[{"title":"Platform Tools","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tools/platform-tools.html"}}}},{"title":"Helm Guide","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/tools/how-to-helm.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/writing-microservices/debugging.html"}}}}]},{"title":"Using Microservices Catalog","subMenus":[{"title":"Controller microservices overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/introduction.html"}}}},{"title":"System: Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/diagnostics.html"}}}},{"title":"System: Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/hal.html"}}}},{"title":"System: Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-system-microservices/rest-blue.html"}}}},{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/microservice-catalog/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/overview.html"}}}},{"title":"Legacy CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/overview.html"}}}},{"title":"Legacy CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/overview.html"}}}},{"title":"Legacy CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.3.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.3.0/"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/1.3.0/tutorial/deploy-our-microservice.html"}}}