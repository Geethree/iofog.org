{"data":{"markdownRemark":{"html":"<h1 id=\"manage-your-microservices\"><a href=\"#manage-your-microservices\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Manage Your Microservices</h1>\n<p>In this step of the tutorial we're ready to learn the basics of managing microservices inside our <a href=\"tutorial-introduction\">Tutorial project</a>.</p>\n<h2 id=\"basic-commands\"><a href=\"#basic-commands\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Commands</h2>\n<p>The Agent daemon runs microservices on your edge nodes locally, but it is controlled remotely by the Controller. Let's learn some of the most common Controller commands you'll use.</p>\n<p>To start, let's enter a shell into our locally running iofog-controller container:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">docker exec -ti iofog-controller bash</code></pre>\n      </div>\n<aside class=\"notifications note\">\n  <h3><img src=\"/images/icos/ico-note.svg\" alt=\"\"> Production vs. Development</h3>\n  <p>Throughout the rest of this tutorial remember that, while we&apos;re running our ioFog network entirely locally using Docker, in production it doesn&apos;t have to be--and probably won&apos;t. Your Controller and Connector will likely be running on cloud servers and your edge node devices in the wild will each be running their own Agent.</p>\n</aside>\n<p>This tutorial includes 5 microservices already running. We can view any configured microservices with <code class=\"language-text\">microservice list</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-controller microservice list</code></pre>\n      </div>\n<p>This returns a JSON object containing the full list, along with their configuration. The most important microservices currently running are:</p>\n<h6 id=\"sensors\"><a href=\"#sensors\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sensors</h6>\n<p>A microservice that pretends to be reading data from a local hardware sensor. The data it produces is published with <a href=\"sdk\">the SDK</a> and routed through the <a href=\"connector-overview\">Connector</a> so that it can be read by other microservices.</p>\n<p><a href=\"https://github.com/ioFog/example-microservices/tree/master/sensors-data\">Source Code</a></p>\n<h6 id=\"api\"><a href=\"#api\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API</h6>\n<p>A generic microservice that provides a REST API web server, allowing access to any arbitrary data source connected using the Controller.</p>\n<p><a href=\"https://github.com/ioFog/example-microservices/tree/master/json-rest-api-cors-enabled\">Source Code</a></p>\n<h6 id=\"freeboard\"><a href=\"#freeboard\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Freeboard</h6>\n<p>Another generic web server microservice that provides an HTML dashboard to view the real-time results coming from the API data source.</p>\n<h2 id=\"routes\"><a href=\"#routes\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Routes</h2>\n<p>The Sensors and REST API microservices are generic; they are not hardcoded to talk with each other, instead the relationship dictating the flow of data was configured with the Controller. This is in the spirit of the microservice architecture, separating concerns into pieces so that you can combine and interchange them.</p>\n<p>To connect microservices together, the Controller has the concept of <strong>routes</strong>.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-controller microservice route --add \\\n  --source-microservice-id &lt;source_id&gt; \\\n  --dest-microservice-id &lt;dest_id&gt;</code></pre>\n      </div>\n<p>We can add or remove them with <code class=\"language-text\">microservice route --add</code> and <code class=\"language-text\">microservice route --remove</code> respectively, while passing in the source and destination microservice IDs. These IDs are returned when you start a microservice, but can also be obtained later from the result of <code class=\"language-text\">microservice list</code>.</p>\n<p>From the result of <code class=\"language-text\">microservice list</code> we can see that a route has already been set up for us: the Sensors microservice has its destination (output) directed to the API microservice.</p>\n<p>The unique ID for each microservice varies, so yours will be different:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Y2MdFhj6Jndk4rpLzdrPhqLfnPm4KPCC\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"{}\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Sensors\"</span><span class=\"token punctuation\">,</span>\n  // ...\n  <span class=\"token property\">\"routes\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"isNetworkConnection\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"destMicroservice\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"uuid\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"QBy9pkbyfJ4twGNfcgWwc9QqzCh7xBxv\"</span> // &lt;--- Sensors directed to API\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span></code></pre>\n      </div>\n<h2 id=\"create-your-first-microservice\"><a href=\"#create-your-first-microservice\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Create Your First Microservice</h2>\n<p>Next up, we're going to create our very first microservice to run on ioFog. To make it easier, our tutorial provides examples in several languages.</p>\n<p>You can also skip straight to learning about how to <a href=\"deploying-your-microservice\">Deploy Microservices</a> instead.</p>\n<p>Pick your preferred language:</p>\n<ul>\n<li><a href=\"create-your-first-microservice-java-script\">JavaScript (Node.js)</a></li>\n</ul>","timeToRead":3,"excerpt":"Manage Your Microservices In this step of the tutorial we're ready to learn the basics of managing microservices inside our  Tutorial…","frontmatter":{"title":"Manage Your Microservices","category":"Tutorial"},"fields":{"nextTitle":"SDK","nextSlug":"/sdk","prevTitle":"Debugging","prevSlug":"/debugging","slug":"/manage-your-microservices"}},"documentation":{"type":"documentation","versions":[{"version":"1.0.0","title":"Version 1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/core-concepts"},"frontmatter":{"title":"Core Concepts"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/quick-start"},"frontmatter":{"title":"Quick Start"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/setup-your-controllers"},"frontmatter":{"title":"Setup Your Controllers"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/setup-your-connectors"},"frontmatter":{"title":"Setup Your Connectors"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/setup-your-agents"},"frontmatter":{"title":"Setup Your Agents"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/tutorial-introduction"},"frontmatter":{"title":"Tutorial Introduction"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/get-to-know-io-fog"},"frontmatter":{"title":"Get To Know ioFog"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/manage-your-microservices"},"frontmatter":{"title":"Manage Your Microservices"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/create-your-first-microservice-java-script"},"frontmatter":{"title":"Create Your First Microservice - JavaScript"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/deploy-your-microservice"},"frontmatter":{"title":"Deploy Your Microservice"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/microservices-overview"},"frontmatter":{"title":"Microservices Overview"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/debugging"},"frontmatter":{"title":"Debugging"}}}},{"title":"Testing","entry":{"childMarkdownRemark":{"fields":{"slug":"/sdk"},"frontmatter":{"title":"SDK"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/controllers-overview"},"frontmatter":{"title":"Controllers Overview"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/controllers-cli-usage"},"frontmatter":{"title":"Controllers CLI Usage"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/rest-api-reference"},"frontmatter":{"title":"REST API Reference"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/connectors-overview"},"frontmatter":{"title":"Connectors Overview"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/connectors-cli-usage"},"frontmatter":{"title":"Connectors CLI Usage"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/agents-overview"},"frontmatter":{"title":"Agents Overview"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/agent-cli-usage"},"frontmatter":{"title":"Agent CLI Usage"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/local-api-reference"},"frontmatter":{"title":"Local API Reference"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/guidelines"},"frontmatter":{"title":"Guidelines"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/code-of-conduct"},"frontmatter":{"title":"Code of Conduct"}}}}]}]}]},"releases":{"type":"releases","versions":[{"title":"Releases","menus":[{"title":"Release 1.0.0","subMenus":[{"title":"Release 1.0.0","entry":{"childMarkdownRemark":{"fields":{"slug":"/release-1-0-0"},"frontmatter":{"title":"Release 1.0.0"}}}}]}]}]}},"pageContext":{"slug":"/manage-your-microservices","type":"documentation","version":"1.0.0"}}