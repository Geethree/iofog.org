{"data":{"markdownRemark":{"html":"<h2 id=\"diagnostics-container\"><a href=\"#diagnostics-container\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Diagnostics Container</h2>\n<p><strong>Diagnostics Container</strong> is a container that performs diagnostics of basic functionality to work with ioFog. <br>\nUse the Diagnostic Container if something goes wrong on your machine with ioFog Agent, e.g. Connectors are not available, a container cannot connect to ioFog host, ioFog client is not created, RestBlue or Log Container are not available, and so on.  <br> With the detailed report that the Diagnostics Container creates, you can be aware of the issues that may arise. <br>\n<br></p>\n<h3 id=\"diagnostics-container-performs-the-following-checks\"><a href=\"#diagnostics-container-performs-the-following-checks\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Diagnostics Container performs the following checks:</h3>\n<ul>\n<li>Client creation (tries to create ioFog client that checks if all the required parameters are provided); <br></li>\n<li>Tries to update config (tries to get ioFog config, ping report_url provided from config); <br></li>\n<li>Sends HEARTBEAT “signal” to report_url (every 30 sec if not specified); <br></li>\n<li>Tries to connect to Sockets (Control and Message Websockets); <br></li>\n<li>Checks if Connectors are available (pings list of Connectors’ IPs provided in config); <br></li>\n<li>Checks if RestBlue is available (connects to RestBlue System Container); <br></li>\n<li>Checks if Log Container is available (connects to Log System Container).<br></li>\n</ul>\n<h3 id=\"examples-of-configuration-jsons\"><a href=\"#examples-of-configuration-jsons\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Examples of configuration JSONs:</h3>\n<p>The full config for the container should look the following way: <br>\n<code class=\"language-text\">{ &quot;report_url&quot;: { &quot;ip&quot;: &quot;127.0.0.1&quot;, &quot;host&quot; : &quot;localhost&quot;, &quot;port&quot; : 6666, &quot;url&quot; : &quot;/report&quot;, &quot;secure&quot; : false }, &quot;connector_list&quot; : [ &quot;192.0.0.1&quot;, &quot;192.168.0.17&quot;, &quot;12.12.3.123&quot; ], &quot;ping_rb&quot;: true, &quot;ping_logger&quot;: true, &quot;interval&quot; : 60}</code> <br>\nIf \"report<em>url\" is not provided or is not available then whole output will be logged to console. Following example is valid and can be used if you don't need to send logs outside: <br>\n`<code class=\"language-text\"></code>{\"connector</em>list\" : [ \"192.0.0.1\", \"192.168.0.17\", \"12.12.3.123\" ], \"ping<em>rb\": true, \"ping</em>logger\": true, \"interval\" : 60}`<code class=\"language-text\"></code> <br></p>\n<h3 id=\"config-explanation-br\"><a href=\"#config-explanation-br\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Config explanation: <br></h3>\n<p>\"report<em>url\": config specifying where to send logs (log to console; not required parameter) <br>\n\"ip\": ip of machine for log reporting (used when host is unreachable) <br>\n\"host\" : host of machine for log reporting <br>\n\"port\" : port of listening server that is ready for log receiving (if not specified, assumed to be 80) <br>\n\"url\" : relative url where to send config <br>\n\"secure\" : set this parameter to \"true\" if you want to use https protocol (if not specified, assumed to be \"false\" and uses http) <br>\n\"connector</em>list\" : list of Connectors that should be pinged <br>\n\"ping<em>rb\" : connect to RestBlue System Container if true is set <br>\n\"ping</em>logger\" : connect to Log System Container if true is set <br>\n\"interval\" : perform checks after the specified interval; every 30 sec if not specified <br></p>\n<h3 id=\"launching-the-container\"><a href=\"#launching-the-container\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Launching the Container</h3>\n<p>Enter iofog-controller user add -f first-name -l last-name -e email -p password in terminal. <br>\nEnter iofog-controller flow add -n name -d description -a -u user-id in terminal. <br>\nEnter iofog-controller iofog add -n name -l location -t latitude -g longitude -d description -D docker-url -M disk-limit -T disk-directory -m memory-limit -c cpu-limit -G log-limit -Y log-directory -C log-file-count -s status-frequency -F change-frequency -Q device-frequency -B -w -a -y fog-type -u user-id in terminal. <br>\nEnter iofog-controller iofog provisioning-key -i node-id in terminal. <br>\nEnter iofog-agent provision {provision-key}. <br>\nEnter iofog-controller microservice add -n name -c catalog-id -F flow-id -I iofog-id -g config -v volumes -l log-size -r -p ports  -u user-id  in terminal. <br>\n<strong>! catalog-id = 4 for Diagnostics container.</strong> <br></p>\n<h3 id=\"diagnostics-output-is-the-detailed-logs-about-system-functionality\"><a href=\"#diagnostics-output-is-the-detailed-logs-about-system-functionality\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Diagnostics output is the detailed logs about system functionality.</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\">\n      <pre class=\"language-text\"><code class=\"language-text\">  1. Go to Terminal.\n  2. Get the list of containers with the following command: sudo docker ps in order to use container name for obtaining logs.\n  3. See the detailed logs about system functionality with the following command: sudo docker logs CONTAINER_NAME (the last value is Container Name taken from the output of sudo docker ps).\n </code></pre>\n      </div>\n<p><img src=\"https://github.com/ioFog/example-microservices/blob/master/diagnostics/DIAGNOSTICS.png\" alt=\"DIAGNOSTICS\"></p>","fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}},"allConfigJson":{"edges":[{"node":{"version":"1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/manage-your-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/create-your-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/deploy-your-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/cli-usage.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.0.0/"}}}]}},"pageContext":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}