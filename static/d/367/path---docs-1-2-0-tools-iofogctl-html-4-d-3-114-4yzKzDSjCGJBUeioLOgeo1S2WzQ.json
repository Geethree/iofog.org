{"data":{"markdownRemark":{"html":"<h1 id=\"iofog-unified-command-line-interface\"><a href=\"#iofog-unified-command-line-interface\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ioFog Unified Command Line Interface</h1>\n<p>In this tutorial, we'll go through the basic functionality of <code class=\"language-text\">iofogctl</code>. This tutorial will get us up and running with <code class=\"language-text\">iofogctl</code> and show how to deploy and operate a live cluster.</p>\n<p><code class=\"language-text\">iofogctl</code> is a CLI tool for installation, configuration, and operation of ioFog Edge Compute Networks (ECNs).</p>\n<p>It can be used to remotely manage multiple different clusters from a single host. It is built for an ioFog user and a DevOps engineer who may want to manage ioFog clusters.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prerequisites</h2>\n<p>The following must be installed and configured before performing bootstrap:</p>\n<ul>\n<li>Go 1.12.1+ (<a href=\"https://golang.org/doc/install\">installation instructions</a>)</li>\n</ul>\n<p>In order to use <code class=\"language-text\">iofogctl</code> for non-local deployments, we'll need to provide our own infrastructure. This means we'll need to provision a Kubernetes cluster and a set of edge nodes.</p>\n<p>IoFog also provides <a href=\"https://github.com/eclipse-iofog/platform\">tools for infrastructure setup</a> to set up a Kubernetes cluster and Agents. Please see <a href=\"../platform/platform-tutorial.html\">Platform tutorial</a>.</p>\n<p>The following table lists all prerequisites required to deploy or connect to individual ioFog components (Controller, Connector and Agent). Note that <code class=\"language-text\">iofogctl</code> does not expose direct interaction with the connector.</p>\n<table>\n<thead>\n<tr>\n<th>Component</th>\n<th>Prerequisites for new deployment</th>\n<th>Prerequisites for connecting to existing deployment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Controller</td>\n<td>Valid Kubernetes config file (e.g. usually found in ~/.kube/config)</td>\n<td>Password of ioFog user on existing Controller</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Email of ioFog user on existing Controller</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td>Valid Kubernetes config file (e.g. usually found in ~/.kube/config) or IP address of Controller</td>\n</tr>\n<tr>\n<td>Agent</td>\n<td>RSA priv/pub key pair that can be used to SSH into the respective machine</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>A user that is in sudo group (e.g. usermod -aG sudo $USER) on the machine</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>Users in group sudo can sudo without a password (use su visudo to edit sudoers file to have %sudo ALL=(ALL) NOPASSWD:ALL) on the machine</td>\n<td>N/A - connecting to existing Controller will automatically connect to provisioned Agents</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"install-iofogctl\"><a href=\"#install-iofogctl\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install iofogctl</h2>\n<p>Mac users can use <a href=\"https://brew.sh/\">Homebrew</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">brew tap eclipse-iofog/iofogctl\nbrew <span class=\"token function\">install</span> iofogctl</code></pre>\n      </div>\n<p>Linux users can use deb or rpm packages:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -s https://packagecloud.io/install/repositories/iofog/iofogctl/script.deb.sh <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span>\n<span class=\"token function\">sudo</span> <span class=\"token function\">apt-get</span> <span class=\"token function\">install</span> iofogctl<span class=\"token operator\">=</span>1.2.0</code></pre>\n      </div>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -s https://packagecloud.io/install/repositories/iofog/iofogctl/script.rpm.sh <span class=\"token operator\">|</span> <span class=\"token function\">sudo</span> <span class=\"token function\">bash</span>\n<span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> iofogctl-1.2.0-1.x86_64</code></pre>\n      </div>\n<p>For developers and users aiming for the latest features, <code class=\"language-text\">iofogctl</code> can be installed in the usual Go fashion directly from its GitHub repository.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">go get -u github.com/eclipse-iofog/iofogctl/cmd/iofogctl</code></pre>\n      </div>\n<aside class=\"notifications danger\">\n  <h3><img src=\"/images/icos/ico-danger.svg\" alt=\"\">Go get is not recommented for casual users</h3>\n  <p>Downloading `iofogctl` using `go get ...` will download the latest version of `iofogctl`. This may not be the same as released, well-tested version.</p>\n</aside>\n<p>Let's verify if <code class=\"language-text\">iofogctl</code> has been installed successfully. Run <code class=\"language-text\">iofogctl version</code> to check if the binary is up to date.</p>\n<h2 id=\"quick-start\"><a href=\"#quick-start\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Quick Start</h2>\n<p>To list all available commands, just runÂ <code class=\"language-text\">iofogctl</code> without any arguments. The available commands should look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ iofogctl\n     _       ____                 __  __\n    (_)___  / __/___  ____  _____/ /_/ /\n   / / __ \\/ /_/ __ \\/ __ `/ ___/ __/ /\n  / / /_/ / __/ /_/ / /_/ / /__/ /_/ /\n /_/\\____/_/  \\____/\\__, /\\___/\\__/_/\n                   /____/\n\n\nWelcome to the cool new iofogctl CLI!\n\nUse `iofogctl version` to display the current version.\n\n\nUsage:\n  iofogctl [flags]\n  iofogctl [command]\n\nAvailable Commands:\n  connect     Connect to an existing ioFog cluster\n  create      Create a resource\n  delete      Delete an existing ioFog resource\n  deploy      Deploy ioFog platform or components on existing infrastructure\n  describe    Get detailed information of existing resources\n  disconnect  Disconnect from an ioFog cluster\n  get         Get information of existing resources\n  help        Help about any command\n  legacy      Execute commands using legacy CLI\n  logs        Get log contents of deployed resource\n  version     Get CLI application version\n\nFlags:\n      --config string      CLI configuration file (default is ~/.iofog.yaml)\n  -h, --help               help for iofogctl\n  -n, --namespace string   Namespace to execute respective command within (default &quot;default&quot;)\n\nUse &quot;iofogctl [command] --help&quot; for more information about a command.</code></pre>\n      </div>\n<h2 id=\"work-with-namespaces\"><a href=\"#work-with-namespaces\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Work with Namespaces</h2>\n<p>All actions performed with <code class=\"language-text\">iofogctl</code> are scoped to a single namespace. The default namespace ('default') is used if the user does not specify a namespace explicitly in the command. Note that namespaces in <code class=\"language-text\">iofogctl</code> do not have to correspond with namespaces in Kubernetes cluster.</p>\n<p>Try creating, listing, and deleting namespaces now with the following commands.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl create namespace mynamespace\niofogctl get namespaces\niofogctl delete namespace mynamespace</code></pre>\n      </div>\n<p>Next, we will use the default namespace to create new ioFog resources in it.</p>\n<h2 id=\"deploy-iofog-stack\"><a href=\"#deploy-iofog-stack\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy ioFog Stack</h2>\n<p>If we don't have an existing ioFog stack to connect to, we can use <code class=\"language-text\">iofogctl</code> to install and provision a new one.</p>\n<p>An ioFog Controller is the central part of each ioFog stack. <code class=\"language-text\">iofogctl</code> connects to a Controller in order to manage ioFog stack.</p>\n<p>We can deploy the ioFog stack to a pre-existing Kubernetes cluster with the following command. Make sure to specify the location of our <a href=\"https://kubernetes.io/docs/concepts/configuration/organize-cluster-access-kubeconfig/\">kubeconfig file</a> correctly.</p>\n<aside class=\"notifications note\">\n  <h3><img src=\"/images/icos/ico-note.svg\" alt=\"\"> New to Docker for Windows?</h3>\n  <p>Alternatively, `iofoctl` can also be used to deploy a simple containerized ioFog stack on a local machine. Explore the `--local` option when using `iofogctl deploy controller` or `iofogctl deploy agent`.</p>\n</aside>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl deploy controller my-ctrl --kube-config ~/.kube/conf</code></pre>\n      </div>\n<p>Under the hood, <code class=\"language-text\">iofogctl</code> will also deploy ioFog Connector and Kubernetes services, which are another essential part of the ioFog stack.</p>\n<p>We can now check that the Controller was deployed successfully.</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ iofogctl get all\n\nCONTROLLER\tSTATUS\t\tAGE\t\tUPTIME\nmy-ctrl\t\tonline\t\t-\t\t1s\n\nAGENT\t\tSTATUS\t\tAGE\t\tUPTIME\n\nMICROSERVICE\tSTATUS\t\tAGE</code></pre>\n      </div>\n<p>It is also possible to query for all of the installed Kubernetes resources. The namespace <code class=\"language-text\">iofogctl</code> uses are always <code class=\"language-text\">iofog</code>, so we can run <code class=\"language-text\">kubectl get all -n iofog</code> to see all the resources installed on our cluster.</p>\n<h2 id=\"connect-existing-iofog-stack-with-code-classlanguage-textiofogctlcode\"><a href=\"#connect-existing-iofog-stack-with-code-classlanguage-textiofogctlcode\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Connect Existing ioFog Stack with <code class=\"language-text\">iofogctl</code></h2>\n<p>Instead of deploying our own ioFog stack, we can just connect to another Controller, for example, one deployed by Helm. See <a href=\"../kubernetes/how-to-helm.html\">helm tutorial</a> for in-depth dive into Helm.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl connect my-ctrl \\\n  -o <span class=\"token variable\"><span class=\"token variable\">$(</span>kubectl -n iofog get svc controller -o jsonpath<span class=\"token operator\">=</span><span class=\"token string\">'{.status.loadBalancer.ingress[0].ip}:{.spec.ports[0].port}'</span><span class=\"token variable\">)</span></span> \\\n  -e user@domain.com  -p <span class=\"token string\">'#Bugs4Fun'</span></code></pre>\n      </div>\n<p>It is also possible to use a kubeconfig file instead of specifying the Controller endpoint manually.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl connect my-ctrl --kube-config ~/.kube/conf --email EMAIL --pass PASSWORD</code></pre>\n      </div>\n<p>Note that we must specify an empty or non-existent namespace when we use the connect command. This is because each cluster should be in its own namespace.</p>\n<h2 id=\"deploy-agent-on-the-iofog-stack\"><a href=\"#deploy-agent-on-the-iofog-stack\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy Agent on the ioFog Stack</h2>\n<p>Let's deploy Agents to a namespace that has a working Controller connected. Here, <code class=\"language-text\">my-first-agent</code> is the agent name, <code class=\"language-text\">1.2.3.4</code> is the external IP that <code class=\"language-text\">iofogctl</code> can access, and <code class=\"language-text\">/home/username/.ssh/agent-key</code> is the key that needs to be authorized on the agent.</p>\n<p>The node that will be hosting our Agent needs to be accessible via SSH, since it is the only way <code class=\"language-text\">iofogctl</code> can deploy the software and provision and register the Agent on that node.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl deploy agent my-first-agent --user username --host 1.2.3.4 --key-file /home/username/.ssh/agent-key</code></pre>\n      </div>\n<p>We can now check that the Agent was deployed successfully.</p>\n<div class=\"gatsby-highlight\" data-language=\"console\">\n      <pre class=\"language-console\"><code class=\"language-console\">$ iofogctl get all\n\nCONTROLLER\t    STATUS\t\tAGE\t\tUPTIME\nctrl\t\t    online\t\t-\t\t1s\n\nAGENT\t\t    STATUS\t\tAGE\t\tUPTIME\nmy-first-agent\tRUNNING\t\t18070d23h\t0s\n\nMICROSERVICE\tSTATUS\t\tAGE</code></pre>\n      </div>\n<h3 id=\"deploy-agent-using-yaml-file\"><a href=\"#deploy-agent-using-yaml-file\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy Agent Using YAML File</h3>\n<p>We can use a YAML file to specify Controllers and Agents to deploy in lieu of the separate commands detailed above.</p>\n<p>RunÂ <code class=\"language-text\">iofogctl deploy --help</code> to view an example of a valid YAML file. When the YAML file is ready, run the deploy command and specify our YAML filename.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl deploy -f platform.yaml</code></pre>\n      </div>\n<h2 id=\"view-iofog-cluster-details\"><a href=\"#view-iofog-cluster-details\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>View ioFog Cluster Details</h2>\n<p>Now that we are connected to a live ioFog cluster, we can go ahead and do some introspection.</p>\n<p>Try to display individual resources or all resources within a namespace with theÂ get command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl get controllers\niofogctl get agents\niofogctl get all</code></pre>\n      </div>\n<p>To get more detailed information, we can use theÂ describe command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl describe controller my-ctrl\niofogctl describe agent my-first-agent</code></pre>\n      </div>\n<h2 id=\"disconnect-from-iofog-stack\"><a href=\"#disconnect-from-iofog-stack\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disconnect From ioFog Stack</h2>\n<p>When we are finished working with the cluster, we can disconnect from it and release the corresponding namespace from <code class=\"language-text\">iofogctl</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\">\n      <pre class=\"language-bash\"><code class=\"language-bash\">iofogctl disconnect my-ctrl -n iofog</code></pre>\n      </div>\n<h2 id=\"delete-iofog-stack\"><a href=\"#delete-iofog-stack\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Delete ioFog Stack</h2>","fields":{"slug":"/docs/1.2.0/tools/iofogctl.html"}},"allConfigJson":{"edges":[{"node":{"version":"1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.0.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.0.0/"}}},{"node":{"version":"1.1.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/getting-started/setup-your-agents.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.1.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.1.0/"}}},{"node":{"version":"1.2.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/core-concepts.html"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/quick-start.html"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/setup-your-controllers.html"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/setup-your-connectors.html"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/setup-your-agents.html"}}}},{"title":"Helm Guide","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/getting-started/how-to-helm.html"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/introduction.html"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/get-to-know-iofog.html"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/manage-our-microservices.html"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/create-our-first-microservice-javascript.html"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tutorial/deploy-our-microservice.html"}}}}]},{"title":"Tools","subMenus":[{"title":"Introduction to iofogctl","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/iofogctl.html"}}}},{"title":"Platform Tools","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/tools/platform-tools.html"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/overview.html"}}}},{"title":"SDK","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/sdk.html"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/writing-microservices/debugging.html"}}}}]},{"title":"Using System Microservices","subMenus":[{"title":"Diagnostics","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/diagnostics.html"}}}},{"title":"Hardware Abstraction Layer","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/hal.html"}}}},{"title":"Bluetooth REST API","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-system-microservices/rest-blue.html"}}}}]},{"title":"Using Public Catalog Microservices","subMenus":[{"title":"JSON REST API And Open Weather Map","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/using-public-catalog-microservices/jsonrestapi.html"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/cli-usage.html"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/controllers/rest-api.html"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/cli-usage.html"}}}},{"title":"API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/connectors/api-reference.html"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/overview.html"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/cli-usage.html"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/agents/local-api.html"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/guidelines.html"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/docs/1.2.0/contributing/code-of-conduct.html"}}}}]}],"fields":{"path":"/docs/1.2.0/"}}}]}},"pageContext":{"slug":"/docs/1.2.0/tools/iofogctl.html"}}