{"data":{"markdownRemark":{"html":"<h1 id=\"setup-your-agents\"><a href=\"#setup-your-agents\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup Your Agents</h1>\n<p>An ioFog Agent is the microservice platform that runs on your individual edge hardware nodes. To set it up, you'll need to install the 'iofog-agent' daemon on each of these devices.</p>\n<h3 id=\"minimum-requirements\"><a href=\"#minimum-requirements\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Minimum Requirements</h3>\n<ul>\n<li>Processor: x86-64 or ARM Dual Core or better</li>\n<li>RAM: 256 MB minimum</li>\n<li>Hard Disk: 100 MB minimum</li>\n<li>Linux kernel v3.10+ (Ubuntu, CentOS, Raspbian, etc)</li>\n<li>Java Runtime v8.0.0 or higher</li>\n<li>Docker v1.10 or higher</li>\n</ul>\n<h2 id=\"setup\"><a href=\"#setup\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setup</h2>\n<h4 id=\"installation-script\"><a href=\"#installation-script\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation Script</h4>\n<p>You can install the Agent daemon and requirements (Java and Docker) with following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">curl -sSf https://iofog.org/linux.sh | sh</code></pre>\n      </div>\n<p>or</p>\n<h4 id=\"java-v800\"><a href=\"#java-v800\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Java v8.0.0+</h4>\n<p>You can find official Java SE Runtime downloads on <a href=\"https://www.oracle.com/technetwork/java/javase/downloads/jre8-downloads-2133155.html\">Oracle's website</a> or alternatively install the <a href=\"http://openjdk.java.net/install/\">OpenJDK Runtime</a>.</p>\n<p>You can also use apt-get:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">sudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer</code></pre>\n      </div>\n<h4 id=\"install-docker\"><a href=\"#install-docker\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Docker</h4>\n<p>You can install the latest version of Docker with following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">curl -sSf https://get.docker.com/ | sh</code></pre>\n      </div>\n<p>or</p>\n<p>Download Docker for <a href=\"https://docs.docker.com/install/linux/docker-ce/ubuntu/\">Ubuntu</a>, <a href=\"https://docs.docker.com/install/linux/docker-ce/debian/\">Debian</a>, <a href=\"https://docs.docker.com/install/linux/docker-ce/fedora/\">Fedora</a>, or <a href=\"https://docs.docker.com/install/linux/docker-ce/centos/\">CentOS</a>.</p>\n<h5 id=\"arm-cpu-docker-configuration\"><a href=\"#arm-cpu-docker-configuration\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ARM CPU Docker Configuration</h5>\n<p>If your edge device has an ARM CPU, there is an additional configuration step for Docker required.</p>\n<p>You need to edit (or add) either of these files:</p>\n<p>The Docker daemon configuration file located at <code class=\"language-text\">/etc/docker/daemon.json</code> and place two entries in your <code class=\"language-text\">&quot;hosts&quot;</code>:</p>\n<h6 id=\"etcdockerdaemonjson\"><a href=\"#etcdockerdaemonjson\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>/etc/docker/daemon.json</h6>\n<div class=\"gatsby-highlight\" data-language=\"json\">\n      <pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"hosts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tcp://127.0.0.1:2375\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unix:///var/run/docker.sock\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>\n<p>The Docker service configuration file located at <code class=\"language-text\">/etc/systemd/system/docker.service.d/overlay.conf</code> and add the following:</p>\n<h6 id=\"etcsystemdsystemdockerservicedoverlayconf\"><a href=\"#etcsystemdsystemdockerservicedoverlayconf\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>/etc/systemd/system/docker.service.d/overlay.conf</h6>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">[Service]\nExecStart=\nExecStart=/usr/bin/dockerd --storage-driver overlay -H unix:///var/run/docker.sock -H tcp://127.0.0.1:2375</code></pre>\n      </div>\n<p>And run these commands:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">sudo systemctl daemon-reload\nsudo service docker restart</code></pre>\n      </div>\n<p>Once you've installed the Agent daemon, you need to change the network address that the Docker daemon can be found at:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\"># Run this once you&#39;ve installed the iofog-agent daemon\niofog-agent config -c tcp://127.0.0.1:2375</code></pre>\n      </div>\n<h3 id=\"install-agent-daemon\"><a href=\"#install-agent-daemon\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Install Agent Daemon</h3>\n<h4 id=\"ubuntudebian\"><a href=\"#ubuntudebian\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Ubuntu/Debian</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">curl -s https://packagecloud.io/install/repositories/iofog/iofog-agent/script.deb.sh | sudo bash\nsudo apt-get install iofog-agent</code></pre>\n      </div>\n<h4 id=\"centosred-hatfedora\"><a href=\"#centosred-hatfedora\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CentOS/Red Hat/Fedora</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">curl -s https://packagecloud.io/install/repositories/iofog/iofog-agent/script.rpm.sh | sudo bash\nsudo yum install iofog-agent</code></pre>\n      </div>\n<h2 id=\"start-the-agent\"><a href=\"#start-the-agent\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Start the Agent</h2>\n<p>Now that our Agent is setup, let's go ahead and start it up using the Linux <a href=\"https://linux.die.net/man/8/service\">service</a> command.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">sudo service iofog-agent start</code></pre>\n      </div>\n<p>If you need to stop or restart it, you can use <code class=\"language-text\">stop</code></p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">sudo service iofog-agent stop</code></pre>\n      </div>\n<h2 id=\"dev-mode\"><a href=\"#dev-mode\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Dev Mode</h2>\n<p>The Agent has a Dev Mode that allows you to get up and running more quickly without needing to deal with SSL certificates.</p>\n<aside class=\"notifications tip\">\n  <h3><img src=\"/images/icos/ico-tip.svg\" alt=\"\"> Dev Mode must be enabled on all Controllers, Connectors, and Agents</h3>\n  <p>When you enable Dev Mode on your Agent, make sure all of your Controllers and Connectors are also in Dev Mode, otherwise they will not be able to communicate.</p>\n  <p>When you&apos;re ready for production, make sure you disable Dev Mode on all of them as well, and have valid SSL certificates installed.</p>\n</aside>\n<p>To enter Dev Mode:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-agent config -dev on</code></pre>\n      </div>\n<p>and then to disable Dev Mode:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-agent config -dev off</code></pre>\n      </div>\n<p>With this enabled, the Agent will send and receive communications to the Controller and Connector using <code class=\"language-text\">http://</code>, not <code class=\"language-text\">https://</code>, bypassing any need for SSL certificates.</p>\n<h2 id=\"ssl-certificates\"><a href=\"#ssl-certificates\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SSL Certificates</h2>\n<p>When not running in developer mode, the Agent requires a valid SSL certificate.</p>\n<p>Ideally certificates would be signed by a Certificate Authority, but because that would require a public domain name, self-signed certificates are accepted as well.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-agent config -ac path/to/ssl.cert</code></pre>\n      </div>\n<aside class=\"notifications tip\">\n  <h3><img src=\"/images/icos/ico-tip.svg\" alt=\"\"> Use the same certificate for Controllers, Connectors, and Agents</h3>\n  <p>If you use self-signed certificates your Controllers, Connectors, and Agents likely need to be configured to use the same certificate/key pair so their communication is trusted.</p>\n</aside>\n<h2 id=\"configure-controller\"><a href=\"#configure-controller\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Controller</h2>\n<p>Agents are managed remotely by your Controller daemon, which needs to have already been setup and have a stable address (domain name or static IP).</p>\n<p>Once you have it, you can configure your Agent to talk to that Controller:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\"># domain name\niofog-agent config -a example.com\n# or IP address\niofog-agent config -a 127.0.0.1:9001</code></pre>\n      </div>\n<h2 id=\"add-node-to-controller\"><a href=\"#add-node-to-controller\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Add Node to Controller</h2>\n<p>Your Controller manages all your ioFog nodes remotely by communicating with the <a href=\"agents-overview\">Agent</a> running on them. Since we just setup an Agent on our new ioFog node we now need to add it to the Controller and get a provisioning key.</p>\n<p>On the server running our Controller we'll use the <code class=\"language-text\">iofog-controller node add</code> command, providing a unique <code class=\"language-text\">name</code> for our node as well as the <code class=\"language-text\">fog-type</code>, which is number signifying the node's CPU architecture: <code class=\"language-text\">0</code> for automatic detection, <code class=\"language-text\">1</code> for x86 (and x64), and <code class=\"language-text\">2</code> for ARM. This command will return a unique node ID we'll use in our next step.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-controller node add --name &quot;my-fog-node&quot; --fog-type 0</code></pre>\n      </div>\n<p>There are a number of other optional configuration options, such as CPU/memory/disk limits, enabling bluetooth, and others found in the <a href=\"controllers-cli-usage\">Controller CLI reference</a>.</p>\n<p>Next, copy the node ID that was returned from calling <code class=\"language-text\">iofog-controller node add</code> above and use it to create a provisioning key:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-controller node provisioning-key --node-id &lt;node_id&gt;</code></pre>\n      </div>\n<p>The key is only valid for <strong>20 minutes</strong> and can only be used once.</p>\n<h2 id=\"provision-your-node\"><a href=\"#provision-your-node\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Provision Your Node</h2>\n<p>The final step in setting up your Agents is provisioning. We'll need to use the provisioning key obtained from the previous step. Keep in mind that provisioning keys are one-time use only, and expire after 20 minutes.</p>\n<p>On our edge node, pass the provisioning key as the argument to the <code class=\"language-text\">iofog-agent provision</code> command:</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\">\n      <pre class=\"language-sh\"><code class=\"language-sh\">iofog-agent provision &lt;provisioning_key&gt;</code></pre>\n      </div>\n<h2 id=\"conclusion\"><a href=\"#conclusion\" aria-hidden=\"true\" class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Conclusion</h2>\n<p>We now have a running Agent! If you haven't already, you'll want to finish setting up <a href=\"setup-your-controllers\">your Controller</a> and a <a href=\"setup-your-connectors\">Connector</a>.</p>\n<p>You can also <a href=\"agents-overview\">learn more about Agents</a> or learn more about <a href=\"microservices-overview\">writing microservices</a>.</p>","timeToRead":6,"excerpt":"Setup Your Agents An ioFog Agent is the microservice platform that runs on your individual edge hardware nodes. To set it up, you'll need to…","frontmatter":{"title":"Setup Your Agents","category":"Getting Started"},"fields":{"nextTitle":"Agent CLI Usage","nextSlug":"/agent-cli-usage","prevTitle":"Core Concepts","prevSlug":"/core-concepts","slug":"/setup-your-agents"}},"documentation":{"type":"documentation","versions":[{"version":"1.0.0","title":"Version 1.0.0","menus":[{"title":"Getting Started","subMenus":[{"title":"Core Concepts","entry":{"childMarkdownRemark":{"fields":{"slug":"/core-concepts"},"frontmatter":{"title":"Core Concepts"}}}},{"title":"Quick Start","entry":{"childMarkdownRemark":{"fields":{"slug":"/quick-start"},"frontmatter":{"title":"Quick Start"}}}},{"title":"Setup Your Controllers","entry":{"childMarkdownRemark":{"fields":{"slug":"/setup-your-controllers"},"frontmatter":{"title":"Setup Your Controllers"}}}},{"title":"Setup Your Connectors","entry":{"childMarkdownRemark":{"fields":{"slug":"/setup-your-connectors"},"frontmatter":{"title":"Setup Your Connectors"}}}},{"title":"Setup Your Agents","entry":{"childMarkdownRemark":{"fields":{"slug":"/setup-your-agents"},"frontmatter":{"title":"Setup Your Agents"}}}}]},{"title":"Tutorial","subMenus":[{"title":"Introduction","entry":{"childMarkdownRemark":{"fields":{"slug":"/tutorial-introduction"},"frontmatter":{"title":"Tutorial Introduction"}}}},{"title":"Get To Know ioFog","entry":{"childMarkdownRemark":{"fields":{"slug":"/get-to-know-io-fog"},"frontmatter":{"title":"Get To Know ioFog"}}}},{"title":"Manage Your Microservices","entry":{"childMarkdownRemark":{"fields":{"slug":"/manage-your-microservices"},"frontmatter":{"title":"Manage Your Microservices"}}}},{"title":"Create Your First Microservice - JavaScript","entry":{"childMarkdownRemark":{"fields":{"slug":"/create-your-first-microservice-java-script"},"frontmatter":{"title":"Create Your First Microservice - JavaScript"}}}},{"title":"Deploy Your Microservice","entry":{"childMarkdownRemark":{"fields":{"slug":"/deploy-your-microservice"},"frontmatter":{"title":"Deploy Your Microservice"}}}}]},{"title":"Writing Microservices","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/microservices-overview"},"frontmatter":{"title":"Microservices Overview"}}}},{"title":"Debugging","entry":{"childMarkdownRemark":{"fields":{"slug":"/debugging"},"frontmatter":{"title":"Debugging"}}}},{"title":"Testing","entry":{"childMarkdownRemark":{"fields":{"slug":"/sdk"},"frontmatter":{"title":"SDK"}}}}]},{"title":"Controllers","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/controllers-overview"},"frontmatter":{"title":"Controllers Overview"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/controllers-cli-usage"},"frontmatter":{"title":"Controllers CLI Usage"}}}},{"title":"REST API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/rest-api-reference"},"frontmatter":{"title":"REST API Reference"}}}}]},{"title":"Connectors","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/connectors-overview"},"frontmatter":{"title":"Connectors Overview"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/connectors-cli-usage"},"frontmatter":{"title":"Connectors CLI Usage"}}}}]},{"title":"Agents","subMenus":[{"title":"Overview","entry":{"childMarkdownRemark":{"fields":{"slug":"/agents-overview"},"frontmatter":{"title":"Agents Overview"}}}},{"title":"CLI Usage","entry":{"childMarkdownRemark":{"fields":{"slug":"/agent-cli-usage"},"frontmatter":{"title":"Agent CLI Usage"}}}},{"title":"Local API Reference","entry":{"childMarkdownRemark":{"fields":{"slug":"/local-api-reference"},"frontmatter":{"title":"Local API Reference"}}}}]},{"title":"Contributing","subMenus":[{"title":"Guidelines","entry":{"childMarkdownRemark":{"fields":{"slug":"/guidelines"},"frontmatter":{"title":"Guidelines"}}}},{"title":"Code of Conduct","entry":{"childMarkdownRemark":{"fields":{"slug":"/code-of-conduct"},"frontmatter":{"title":"Code of Conduct"}}}}]}]}]},"releases":{"type":"releases","versions":[{"title":"Releases","menus":[{"title":"Release 1.0.0","subMenus":[{"title":"Release 1.0.0","entry":{"childMarkdownRemark":{"fields":{"slug":"/release-1-0-0"},"frontmatter":{"title":"Release 1.0.0"}}}}]}]}]}},"pageContext":{"slug":"/setup-your-agents","type":"documentation","version":"1.0.0"}}